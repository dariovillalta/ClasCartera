{"version":3,"sources":["app.js"],"names":["config","user","password","server","database","stream","pool","max","min","idleTimeoutMillis","sql","ConnectionPool","err","console","log","App","state","isLoggedIn","userName","query","result","logged","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;AAEA,IAAMA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,IADK;AAEXC,EAAAA,QAAQ,EAAE,cAFC;AAGXC,EAAAA,MAAM,EAAE,WAHG;AAIXC,EAAAA,QAAQ,EAAE,eAJC;AAKXC,EAAAA,MAAM,EAAE,IALG;AAMXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,EADH;AAEFC,IAAAA,GAAG,EAAE,CAFH;AAGFC,IAAAA,iBAAiB,EAAE;AAHjB;AANK,CAAf;AAaA,IAAMH,IAAI,GAAG,IAAII,kBAAIC,cAAR,CAAuBX,MAAvB,EAA+B,UAAAY,GAAG,EAAI;AAC/C,MAAGA,GAAH,EAAQ;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACA;;;;;;;;AAQH,GAXD,MAWO;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ,CAfY,CAAb;;IAiBqBC,G;;;;;AACjB,iBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,IADH;AAETC,MAAAA,QAAQ,EAAE,IAFD,CAIb;;AACA;;;;;;;;;;;;AAYA;;AAjBa,KAAb;AAFU;AAoBb;;;;6BACO;AACJ,UAAMlB,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,IADK;AAEXC,QAAAA,QAAQ,EAAE,cAFC;AAGXC,QAAAA,MAAM,EAAE,WAHG;AAIXC,QAAAA,QAAQ,EAAE,SAJC;AAKXC,QAAAA,MAAM,EAAE,IALG;AAMXC,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAE,EADH;AAEFC,UAAAA,GAAG,EAAE,CAFH;AAGFC,UAAAA,iBAAiB,EAAE;AAHjB;AANK,OAAf;AAYA,UAAMH,IAAI,GAAG,IAAII,kBAAIC,cAAR,CAAuBX,MAAvB,EAA+B,UAAAY,GAAG,EAAI;AAC/CC,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,YAAGF,GAAH,EAAQ;AACJC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,iBAAOR,IAAI,CAACa,KAAL,CAAW,8BAAX,EAA2C,UAACP,GAAD,EAAMQ,MAAN,EAAiB;AAC/DP,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACH,WAHM,CAAP;AAIH;AACJ,OAXY,CAAb;AAYH;;;6BACQ;AACL,UAAIC,MAAM,GAAG,KAAKL,KAAL,CAAWC,UAAxB;AACA,aACI,6CACMI,MAAM,GACJ,gCAAC,kBAAD;AAAQ,QAAA,IAAI,EAAEf;AAAd,aADI;AAGJ;AACA,kDALR,CADJ;AAUH;;;;EA5D4BgB,kBAAMC,S","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport Layout from './components/Layout.js';\n//import odbc from 'odbc';\n/*import LoginPage from './components/LoginPage.js';*/\n\nconst config = {\n    user: 'SA',\n    password: 'password111!',\n    server: 'localhost',\n    database: 'INTEGEVAL_Dev',\n    stream: true,\n    pool: {\n        max: 40,\n        min: 0,\n        idleTimeoutMillis: 60000\n    }\n}\n\nconst pool = new sql.ConnectionPool(config, err => {\n    if(err) {\n        console.log(err);\n        console.log(\"Error en conección con la base de datos\");\n        /*$(\"body\").overhang({\n            type: \"error\",\n            primary: \"#f84a1d\",\n            accent: \"#d94e2a\",\n            message: \"Error en conección con la base de datos.\",\n            overlay: true,\n            closeConfirm: true\n        });*/\n    } else {\n        console.log('pool loaded');\n    }\n});\n\nexport default class App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedIn: true,\n            userName: null\n        }\n        // or using a configuration object\n        /*const connectionString = {\n            connectionString: 'DSN=ClasificacionCartera',\n            connectionTimeout: 360,\n            loginTimeout: 360\n        }\n        odbc.connect(connectionString, (error, connection) => {\n            console.log(connection);\n            connection.columns(null, null, null, null, (error, result) => {\n                if (error) { return; } // handle\n                console.log(result);\n            });\n        });*/\n        // connection2 is now an open Connection\n    }\n    select(){\n        const config = {\n            user: 'SA',\n            password: 'password111!',\n            server: 'localhost',\n            database: 'RCL_Dev',\n            stream: true,\n            pool: {\n                max: 40,\n                min: 0,\n                idleTimeoutMillis: 60000\n            }\n        }\n        const pool = new sql.ConnectionPool(config, err => {\n            console.log(\"11\");\n            if(err) {\n                console.log(err);\n            } else {\n                console.log(\"222\");\n                return pool.query('select * from Activos_Bancos', (err, result) => {\n                    console.log(\"333\");\n                    console.log(result);\n                });\n            }\n        });\n    }\n    render() {\n        let logged = this.state.isLoggedIn;\n        return (\n            <div>\n                { logged ? (\n                    <Layout pool={pool}> </Layout>\n                ) : (\n                    /*<LoginPage> </LoginPage>*/\n                    <div></div>\n                )}\n            </div>\n        );\n    }\n}\n"],"file":"app.js"}