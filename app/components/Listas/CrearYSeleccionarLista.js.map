{"version":3,"sources":["components/Listas/CrearYSeleccionarLista.js"],"names":["campos","nombre","CrearYSeleccionarLista","props","state","listas","listaSeleccionada","listaSeleccionadaNombre","mostrar","variablesDeLista","loadLists","bind","seleccionarLista","createList","regresarSeleccionarLista","createElementList","loadElementsOfLists","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","setState","recordset","idLista","nombreLista","$","val","length","alert","valor","tipo","undefined","isNaN","localeCompare","showConfigurationComponent","color","fontSize","fontWeight","margin","display","map","lista","i","ID","width","fontFamily","border","campo","k","elemento","listaID","deleteElementList","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,CAAE;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAF,EAAuB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAAvB,EAAwC;AAACA,EAAAA,MAAM,EAAE;AAAT,CAAxC,EAA0D;AAACA,EAAAA,MAAM,EAAE;AAAT,CAA1D,CAAf;;IAEqBC,sB;;;;;AACjB,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gGAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,iBAAiB,EAAE,CAAC,CAFX;AAGTC,MAAAA,uBAAuB,EAAE,EAHhB;AAITC,MAAAA,OAAO,EAAE,UAJA;AAKTC,MAAAA,gBAAgB,EAAE;AALT,KAAb;AAOA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AACA,UAAKG,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BH,IAA9B,+BAAhC;AACA,UAAKI,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBJ,IAAvB,+BAAzB;AACA,UAAKK,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBL,IAAzB,+BAA3B;AAde;AAelB;;;;wCAEmB;AAChB,WAAKD,SAAL;AACH;;;gCAEW;AAAA;;AACR,UAAMO,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKhB,KAAL,CAAWiB,IAAhC,CAApB;AACAH,MAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,UAAU,GAAG,KAAjB;AACAN,QAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,UAAAA,UAAU,GAAG,IAAb;AACH,SAFD;AAGA,YAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,QAAAA,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsC,UAACN,GAAD,EAAMO,MAAN,EAAiB;AACnD,cAAIP,GAAJ,EAAS;AACL,gBAAI,CAACC,UAAL,EAAiB;AACbO,cAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAL,cAAAA,WAAW,CAACe,QAAZ,CAAqB,UAAAV,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,WAND,MAMO;AACHL,YAAAA,WAAW,CAACgB,MAAZ,CAAmB,UAAAX,GAAG,EAAI;AACtB,cAAA,MAAI,CAACY,QAAL,CAAc;AACV7B,gBAAAA,MAAM,EAAEwB,MAAM,CAACM;AADL,eAAd;AAGH,aAJD;AAKH;AACJ,SAdD;AAeH,OArBD,EAFQ,CAuBJ;AACP;;;qCAEgBC,O,EAASC,W,EAAa;AACnC,WAAKH,QAAL,CAAc;AACV5B,QAAAA,iBAAiB,EAAE8B,OADT;AAEV5B,QAAAA,OAAO,EAAE,gBAFC;AAGVD,QAAAA,uBAAuB,EAAE8B;AAHf,OAAd;AAKA,WAAKrB,mBAAL;AACH;;;iCAEY;AAAA;;AACT,UAAIf,MAAM,GAAGqC,CAAC,CAAC,mBAAD,CAAD,CAAuBC,GAAvB,EAAb;;AACA,UAAGtC,MAAM,CAACuC,MAAP,GAAgB,CAAhB,IAAqBvC,MAAM,CAACuC,MAAP,GAAgB,EAAxC,EAA4C;AACxC,YAAMvB,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKhB,KAAL,CAAWiB,IAAhC,CAApB;AACAH,QAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,cAAIC,UAAU,GAAG,KAAjB;AACAN,UAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,YAAAA,UAAU,GAAG,IAAb;AACH,WAFD;AAGA,cAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,UAAAA,OAAO,CAACE,KAAR,CAAc,0CAAwC3B,MAAxC,GAA+C,IAA7D,EAAmE,UAACqB,GAAD,EAAMO,MAAN,EAAiB;AAChF,gBAAIP,GAAJ,EAAS;AACL,kBAAI,CAACC,UAAL,EAAiB;AACbO,gBAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAL,gBAAAA,WAAW,CAACe,QAAZ,CAAqB,UAAAV,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,aAND,MAMO;AACHL,cAAAA,WAAW,CAACgB,MAAZ,CAAmB,UAAAX,GAAG,EAAI;AACtB,gBAAA,MAAI,CAACZ,SAAL;AACH,eAFD;AAGH;AACJ,WAZD;AAaH,SAnBD,EAFwC,CAqBpC;AACP,OAtBD,MAsBO;AACH+B,QAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ;;;+CAE0B;AACvB,WAAKP,QAAL,CAAc;AACV5B,QAAAA,iBAAiB,EAAE,CAAC,CADV;AAEVC,QAAAA,uBAAuB,EAAE,EAFf;AAGVC,QAAAA,OAAO,EAAE,UAHC;AAIVC,QAAAA,gBAAgB,EAAE;AAJR,OAAd;AAMH;;;wCAEmB;AAAA;;AAChB,UAAI2B,OAAO,GAAG,KAAKhC,KAAL,CAAWE,iBAAzB;AACA,UAAIL,MAAM,GAAGqC,CAAC,CAAC,sBAAD,CAAD,CAA0BC,GAA1B,EAAb;AACA,UAAIG,KAAK,GAAGJ,CAAC,CAAC,qBAAD,CAAD,CAAyBC,GAAzB,EAAZ;AACA,UAAII,IAAI,GAAGL,CAAC,CAAC,iBAAD,CAAD,CAAqBC,GAArB,EAAX;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAaK,OAAzB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAY9B,MAAxB;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAWW,KAAvB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAUY,IAAtB;;AACA,UAAGP,OAAO,IAAIQ,SAAX,IAAwB,CAACC,KAAK,CAACT,OAAD,CAAjC,EAA4C;AACxC,YAAGnC,MAAM,CAACuC,MAAP,GAAgB,CAAhB,IAAqBvC,MAAM,CAACuC,MAAP,GAAgB,EAAxC,EAA4C;AACxC,cAAGE,KAAK,CAACF,MAAN,GAAe,CAAf,IAAoBE,KAAK,CAACF,MAAN,GAAe,GAAtC,EAA2C;AACvC,gBAAGG,IAAI,CAACH,MAAL,GAAc,CAAd,IAAmBG,IAAI,CAACH,MAAL,GAAc,EAApC,EAAwC;AACpC,kBAAMvB,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKhB,KAAL,CAAWiB,IAAhC,CAApB;AACAH,cAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,oBAAIC,UAAU,GAAG,KAAjB;AACAN,gBAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,kBAAAA,UAAU,GAAG,IAAb;AACH,iBAFD;AAGA,oBAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,gBAAAA,OAAO,CAACE,KAAR,CAAc,yEAAuEQ,OAAvE,GAA+E,KAA/E,GAAqFM,KAArF,GAA2F,MAA3F,GAAkGzC,MAAlG,GAAyG,MAAzG,GAAgH0C,IAAhH,GAAqH,IAAnI,EAAyI,UAACrB,GAAD,EAAMO,MAAN,EAAiB;AACtJ,sBAAIP,GAAJ,EAAS;AACL,wBAAI,CAACC,UAAL,EAAiB;AACbO,sBAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAL,sBAAAA,WAAW,CAACe,QAAZ,CAAqB,UAAAV,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,mBAND,MAMO;AACHL,oBAAAA,WAAW,CAACgB,MAAZ,CAAmB,UAAAX,GAAG,EAAI;AACtB,sBAAA,MAAI,CAACN,mBAAL;AACH,qBAFD;AAGH;AACJ,iBAZD;AAaH,eAnBD,EAFoC,CAqBhC;AACP,aAtBD,MAsBO;AACHyB,cAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ,WA1BD,MA0BO;AACHA,YAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ,SA9BD,MA8BO;AACHA,UAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ,OAlCD,MAkCO;AACHA,QAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ;;;0CAEqB;AAAA;;AAClB,UAAMxB,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKhB,KAAL,CAAWiB,IAAhC,CAApB;AACAH,MAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,UAAU,GAAG,KAAjB;AACAN,QAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,UAAAA,UAAU,GAAG,IAAb;AACH,SAFD;AAGA,YAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,QAAAA,OAAO,CAACE,KAAR,CAAc,oDAAkD,MAAI,CAACxB,KAAL,CAAWE,iBAA3E,EAA8F,UAACgB,GAAD,EAAMO,MAAN,EAAiB;AAC3G,cAAIP,GAAJ,EAAS;AACL,gBAAI,CAACC,UAAL,EAAiB;AACbO,cAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAL,cAAAA,WAAW,CAACe,QAAZ,CAAqB,UAAAV,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,WAND,MAMO;AACHL,YAAAA,WAAW,CAACgB,MAAZ,CAAmB,UAAAX,GAAG,EAAI;AACtB,cAAA,MAAI,CAACY,QAAL,CAAc;AACVzB,gBAAAA,gBAAgB,EAAEoB,MAAM,CAACM;AADf,eAAd;AAGH,aAJD;AAKH;AACJ,SAdD;AAeH,OArBD,EAFkB,CAuBd;AACP;;;6BAEQ;AAAA;;AACL,UAAG,KAAK/B,KAAL,CAAWI,OAAX,CAAmBsC,aAAnB,CAAiC,UAAjC,KAAgD,CAAnD,EAAsD;AAClD,eACI,6CACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAI,UAAA,SAAS,EAAE;AAAf,8BADJ,EAEI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,wBAAW;AAAhB,WACI;AAAI,UAAA,SAAS,EAAE;AAAf,WACI;AAAI,UAAA,SAAS,EAAE,iBAAf;AAAkC,0BAAa,MAA/C;AAAsD,UAAA,OAAO,EAAE,KAAK3C,KAAL,CAAW4C;AAA1E,WAAsG;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAE;AAAvB,8BAAtG,CADJ,EAEI;AAAI,UAAA,SAAS,EAAE,wBAAf;AAAyC,0BAAa;AAAtD,+BAFJ,CADJ,CADJ,CAFJ,CADJ,CADJ,CADJ,EAgBI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACI;AAAO,UAAA,SAAS,EAAE;AAAlB,6BADJ,EAEI;AAAO,UAAA,EAAE,EAAC,kBAAV;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAAyC,UAAA,SAAS,EAAE;AAApD,UAFJ,CADJ,CADJ,EAOI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAQ,UAAA,OAAO,EAAE,KAAKlC,UAAtB;AAAkC,UAAA,SAAS,EAAE,4CAA7C;AAA2F,UAAA,KAAK,EAAE;AAACmC,YAAAA,KAAK,EAAE,OAAR;AAAiBC,YAAAA,QAAQ,EAAE,OAA3B;AAAoCC,YAAAA,UAAU,EAAE,MAAhD;AAAwDC,YAAAA,MAAM,EAAE,QAAhE;AAA0EC,YAAAA,OAAO,EAAE;AAAnF;AAAlG,mBADJ,CAPJ,CADJ,CADJ,CADJ,CAhBJ,EAiCI,2CAjCJ,EAkCI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACK,KAAKhD,KAAL,CAAWC,MAAX,CAAkBgD,GAAlB,CAAsB,UAACC,KAAD,EAAQC,CAAR;AAAA,iBACnB;AAAG,YAAA,SAAS,EAAE,+DAAd;AAA+E,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3C,gBAAL,CAAsB0C,KAAK,CAACE,EAA5B,EAAgCF,KAAK,CAACrD,MAAtC,CAAN;AAAA,aAAxF;AAA6I,YAAA,GAAG,EAAEqD,KAAK,CAACE;AAAxJ,aAA6JF,KAAK,CAACrD,MAAnK,CADmB;AAAA,SAAtB,CADL,EAIM,KAAKG,KAAL,CAAWC,MAAX,CAAkBmC,MAAlB,IAA4B,CAA5B,GACE;AAAG,UAAA,SAAS,EAAE;AAAd,uCADF,GAGE,6CAPR,CADJ,CADJ,CADJ,CADJ,CAlCJ,CADJ;AAuDH,OAxDD,MAwDO,IAAG,KAAKpC,KAAL,CAAWI,OAAX,CAAmBsC,aAAnB,CAAiC,gBAAjC,KAAsD,CAAzD,EAA4D;AAC/D,eACI,6CACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAI,UAAA,SAAS,EAAE;AAAf,8BADJ,EAEI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,wBAAW;AAAhB,WACI;AAAI,UAAA,SAAS,EAAE;AAAf,WACI;AAAI,UAAA,SAAS,EAAE,iBAAf;AAAkC,0BAAa,MAA/C;AAAsD,UAAA,OAAO,EAAE,KAAK3C,KAAL,CAAW4C;AAA1E,WAAsG;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAE;AAAvB,8BAAtG,CADJ,EAEI;AAAI,UAAA,SAAS,EAAE,iBAAf;AAAkC,0BAAa,MAA/C;AAAsD,UAAA,OAAO,EAAE,KAAKjC;AAApE,WAA8F;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAE;AAAvB,+BAA9F,CAFJ,EAGI;AAAI,UAAA,SAAS,EAAE,wBAAf;AAAyC,0BAAa;AAAtD,+BAHJ,CADJ,CADJ,CAFJ,CADJ,CADJ,CADJ,EAiBI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE,KAAhB;AAAuB,UAAA,KAAK,EAAE;AAAC2C,YAAAA,KAAK,EAAE;AAAR;AAA9B,WACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACI;AAAO,UAAA,SAAS,EAAE;AAAlB,mBADJ,EAEI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE,qBAAb;AAAoCV,YAAAA,KAAK,EAAE,SAA3C;AAAsDW,YAAAA,MAAM,EAAE;AAA9D,WAAX;AAA4F,UAAA,SAAS,EAAE;AAAvG,WAA0H,KAAKvD,KAAL,CAAWG,uBAArI,CAFJ,CADJ,EAKI;AAAK,UAAA,SAAS,EAAC;AAAf,WACI;AAAO,UAAA,SAAS,EAAE;AAAlB,gCADJ,EAEI;AAAO,UAAA,EAAE,EAAC,qBAAV;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,SAAS,EAAE;AAAvD,UAFJ,CALJ,CADJ,EAWI;AAAK,UAAA,SAAS,EAAE,KAAhB;AAAuB,UAAA,KAAK,EAAE;AAACkD,YAAAA,KAAK,EAAE;AAAR;AAA9B,WACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACI;AAAO,UAAA,SAAS,EAAE;AAAlB,+BADJ,EAEI;AAAO,UAAA,EAAE,EAAC,oBAAV;AAA+B,UAAA,IAAI,EAAC,MAApC;AAA2C,UAAA,SAAS,EAAE;AAAtD,UAFJ,CADJ,EAKI;AAAK,UAAA,SAAS,EAAC;AAAf,WACI;AAAO,UAAA,SAAS,EAAE;AAAlB,8BADJ,EAEI;AAAQ,UAAA,EAAE,EAAC,gBAAX;AAA4B,UAAA,SAAS,EAAE;AAAvC,WACI;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAiB,UAAA,GAAG,EAAC;AAArB,+CADJ,EAEKzD,MAAM,CAACqD,GAAP,CAAW,UAACO,KAAD,EAAQC,CAAR;AAAA,iBACR;AAAQ,YAAA,KAAK,EAAED,KAAK,CAAC3D,MAArB;AAA6B,YAAA,GAAG,EAAE4D;AAAlC,aAAsCD,KAAK,CAAC3D,MAA5C,CADQ;AAAA,SAAX,CAFL,CAFJ,CALJ,CAXJ,CADJ,EA4BI,2CA5BJ,EA6BI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAQ,UAAA,OAAO,EAAE,KAAKc,iBAAtB;AAAyC,UAAA,SAAS,EAAE,4CAApD;AAAkG,UAAA,KAAK,EAAE;AAACiC,YAAAA,KAAK,EAAE,OAAR;AAAiBC,YAAAA,QAAQ,EAAE,OAA3B;AAAoCC,YAAAA,UAAU,EAAE,MAAhD;AAAwDC,YAAAA,MAAM,EAAE,QAAhE;AAA0EC,YAAAA,OAAO,EAAE;AAAnF;AAAzG,mBADJ,CA7BJ,CADJ,CADJ,CADJ,CAjBJ,EAwDI,2CAxDJ,EAyDI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACI;AAAK,UAAA,SAAS,EAAE;AAAhB,WACK,KAAKhD,KAAL,CAAWK,gBAAX,CAA4B4C,GAA5B,CAAgC,UAACS,QAAD,EAAWP,CAAX;AAAA,iBAC7B;AAAK,YAAA,GAAG,EAAEO,QAAQ,CAACN,EAAnB;AAAuB,YAAA,SAAS,EAAE,8BAAlC;AAAkE,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR;AAAzE,aACI;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAuB,YAAA,KAAK,EAAE;AAACA,cAAAA,KAAK,EAAE;AAAR;AAA9B,aACI;AAAK,YAAA,SAAS,EAAC;AAAf,aACI;AAAO,YAAA,SAAS,EAAE;AAAlB,qBADJ,EAEI,gCAAC,sBAAD;AAAY,YAAA,EAAE,EAAE,oBAAkBF,CAAlC;AAAqC,YAAA,KAAK,EAAEO,QAAQ,CAACC;AAArD,iBAFJ,CADJ,EAKI;AAAK,YAAA,SAAS,EAAC;AAAf,aACI;AAAO,YAAA,SAAS,EAAE;AAAlB,kCADJ,EAEI,gCAAC,sBAAD;AAAY,YAAA,EAAE,EAAE,mBAAiBR,CAAjC;AAAoC,YAAA,KAAK,EAAEO,QAAQ,CAAC7D;AAApD,iBAFJ,CALJ,CADJ,EAWI;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAuB,YAAA,KAAK,EAAE;AAACwD,cAAAA,KAAK,EAAE;AAAR;AAA9B,aACI;AAAK,YAAA,SAAS,EAAC;AAAf,aACI;AAAO,YAAA,SAAS,EAAE;AAAlB,iCADJ,EAEI,gCAAC,sBAAD;AAAY,YAAA,EAAE,EAAE,kBAAgBF,CAAhC;AAAmC,YAAA,KAAK,EAAEO,QAAQ,CAACpB;AAAnD,iBAFJ,CADJ,EAKI;AAAK,YAAA,SAAS,EAAC;AAAf,aACI;AAAO,YAAA,SAAS,EAAE;AAAlB,gCADJ,EAEI;AAAQ,YAAA,EAAE,EAAE,cAAYa,CAAxB;AAA2B,YAAA,SAAS,EAAE,cAAtC;AAAsD,YAAA,YAAY,EAAEO,QAAQ,CAACnB;AAA7E,aACI;AAAQ,YAAA,KAAK,EAAC,EAAd;AAAiB,YAAA,GAAG,EAAC;AAArB,iDADJ,EAEK3C,MAAM,CAACqD,GAAP,CAAW,UAACO,KAAD,EAAQC,CAAR;AAAA,mBACR;AAAQ,cAAA,KAAK,EAAED,KAAK,CAAC3D,MAArB;AAA6B,cAAA,GAAG,EAAE4D;AAAlC,eAAsCD,KAAK,CAAC3D,MAA5C,CADQ;AAAA,WAAX,CAFL,CAFJ,CALJ,CAXJ,EA0BI;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAuB,YAAA,KAAK,EAAE;AAACwD,cAAAA,KAAK,EAAE;AAAR;AAA9B,aACI;AAAQ,YAAA,OAAO,EAAE,MAAI,CAAC1C,iBAAtB;AAAyC,YAAA,SAAS,EAAE,0CAApD;AAAgG,YAAA,KAAK,EAAE;AAACiC,cAAAA,KAAK,EAAE,OAAR;AAAiBC,cAAAA,QAAQ,EAAE,OAA3B;AAAoCC,cAAAA,UAAU,EAAE,MAAhD;AAAwDC,cAAAA,MAAM,EAAE,QAAhE;AAA0EC,cAAAA,OAAO,EAAE;AAAnF;AAAvG,uBADJ,EAEI;AAAQ,YAAA,OAAO,EAAE,MAAI,CAACY,iBAAtB;AAAyC,YAAA,SAAS,EAAE,yCAApD;AAA+F,YAAA,KAAK,EAAE;AAAChB,cAAAA,KAAK,EAAE,OAAR;AAAiBC,cAAAA,QAAQ,EAAE,OAA3B;AAAoCC,cAAAA,UAAU,EAAE,MAAhD;AAAwDC,cAAAA,MAAM,EAAE,QAAhE;AAA0EC,cAAAA,OAAO,EAAE;AAAnF;AAAtG,wBAFJ,CA1BJ,EA8BI;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAuB,YAAA,KAAK,EAAE;AAACK,cAAAA,KAAK,EAAE;AAAR;AAA9B,aACI,2CADJ,CA9BJ,CAD6B;AAAA,SAAhC,CADL,EAqCM,KAAKrD,KAAL,CAAWK,gBAAX,CAA4B+B,MAA5B,IAAsC,CAAtC,GACE;AAAG,UAAA,SAAS,EAAE;AAAd,0CADF,GAGE,6CAxCR,CADJ,CADJ,CADJ,CAzDJ,CADJ;AA6GH;AACJ;;;;EAjV+CyB,kBAAMC,S","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport InlineEdit from '../InlineEdit.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\n\nexport default class CrearYSeleccionarLista extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listas: [],\n            listaSeleccionada: -1,\n            listaSeleccionadaNombre: \"\",\n            mostrar: \"selLista\",\n            variablesDeLista: []\n        }\n        this.loadLists = this.loadLists.bind(this);\n        this.seleccionarLista = this.seleccionarLista.bind(this);\n        this.createList = this.createList.bind(this);\n        this.regresarSeleccionarLista = this.regresarSeleccionarLista.bind(this);\n        this.createElementList = this.createElementList.bind(this);\n        this.loadElementsOfLists = this.loadElementsOfLists.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadLists();\n    }\n\n    loadLists() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Listas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            listas: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    seleccionarLista(idLista, nombreLista) {\n        this.setState({\n            listaSeleccionada: idLista,\n            mostrar: \"verElemenLista\",\n            listaSeleccionadaNombre: nombreLista\n        });\n        this.loadElementsOfLists();\n    }\n\n    createList() {\n        let nombre = $(\"#nombreNuevaLista\").val();\n        if(nombre.length > 0 && nombre.length < 41) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"insert into Listas (nombre) values ('\"+nombre+\"')\", (err, result) => {\n                    if (err) {\n                        if (!rolledBack) {\n                            console.log(err);\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            this.loadLists();\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else {\n            alert(\"Error\");\n        }\n    }\n\n    regresarSeleccionarLista() {\n        this.setState({\n            listaSeleccionada: -1,\n            listaSeleccionadaNombre: \"\",\n            mostrar: \"selLista\",\n            variablesDeLista: []\n        });\n    }\n\n    createElementList() {\n        let idLista = this.state.listaSeleccionada;\n        let nombre = $(\"#nombreElementoNuevo\").val();\n        let valor = $(\"#valorElementoNuevo\").val();\n        let tipo = $(\"#listaTipoNuevo\").val();\n        console.log(\"idLista = \"+idLista);\n        console.log(\"nombre = \"+nombre);\n        console.log(\"valor = \"+valor);\n        console.log(\"tipo = \"+tipo);\n        if(idLista != undefined && !isNaN(idLista)) {\n            if(nombre.length > 0 && nombre.length < 51) {\n                if(valor.length > 0 && valor.length < 501) {\n                    if(tipo.length > 0 && tipo.length < 26) {\n                        const transaction = new sql.Transaction( this.props.pool );\n                        transaction.begin(err => {\n                            var rolledBack = false;\n                            transaction.on('rollback', aborted => {\n                                rolledBack = true;\n                            });\n                            const request = new sql.Request(transaction);\n                            request.query(\"insert into VariablesdeLista (listaID, valor, nombre, tipo) values (\"+idLista+\", '\"+valor+\"', '\"+nombre+\"', '\"+tipo+\"')\", (err, result) => {\n                                if (err) {\n                                    if (!rolledBack) {\n                                        console.log(err);\n                                        transaction.rollback(err => {\n                                        });\n                                    }\n                                } else {\n                                    transaction.commit(err => {\n                                        this.loadElementsOfLists();\n                                    });\n                                }\n                            });\n                        }); // fin transaction\n                    } else {\n                        alert(\"Error\");\n                    }\n                } else {\n                    alert(\"Error\");\n                }\n            } else {\n                alert(\"Error\");\n            }\n        } else {\n            alert(\"Error\");\n        }\n    }\n\n    loadElementsOfLists() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from VariablesdeLista where listaID = \"+this.state.listaSeleccionada, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            variablesDeLista: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    render() {\n        if(this.state.mostrar.localeCompare(\"selLista\") == 0) {\n            return (\n                <div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"page-header\"}>\n                                <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                                <div className={\"page-breadcrumb\"}>\n                                    <nav aria-label=\"breadcrumb\">\n                                        <ol className={\"breadcrumb\"}>\n                                            <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.showConfigurationComponent}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                            <li className={\"breadcrumb-item active\"} aria-current=\"page\">Seleccionar Lista</li>\n                                        </ol>\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"card influencer-profile-data\"}>\n                                <div className={\"card-body\"}>\n                                    <div className={\"row\"}>\n                                        <div className=\"form-group col-xl-12 col-12\">\n                                            <label className={\"col-form-label\"}>Nombre de Lista</label>\n                                            <input id=\"nombreNuevaLista\" type=\"text\" className={\"form-control\"}/>\n                                        </div>\n                                    </div>\n                                    <div className={\"row\"}>\n                                        <button onClick={this.createList} className={\"btn btn-success btn-block col-xl-10 col-10\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\", margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <br/>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"card influencer-profile-data\"}>\n                                <div className={\"card-body\"}>\n                                    <div className={\"row border-top border-bottom addPaddingToConfig\"}>\n                                        {this.state.listas.map((lista, i) =>\n                                            <a className={\"btn btn-outline-info btn-block btnWhiteColorHover fontSize1EM\"} onClick={() => this.seleccionarLista(lista.ID, lista.nombre)} key={lista.ID}>{lista.nombre}</a>\n                                        )}\n                                        { this.state.listas.length == 0 ? (\n                                            <a className={\"btn btn-outline-dark btn-block btnWhiteColorHover fontSize1EM\"}>No existen listas creadas</a>\n                                        ) : (\n                                            <span></span>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if(this.state.mostrar.localeCompare(\"verElemenLista\") == 0) {\n            return (\n                <div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"page-header\"}>\n                                <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                                <div className={\"page-breadcrumb\"}>\n                                    <nav aria-label=\"breadcrumb\">\n                                        <ol className={\"breadcrumb\"}>\n                                            <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.showConfigurationComponent}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                            <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.regresarSeleccionarLista}><a href=\"#\" className={\"breadcrumb-link\"}>Seleccionar Lista</a></li>\n                                            <li className={\"breadcrumb-item active\"} aria-current=\"page\">Seleccionar Lista</li>\n                                        </ol>\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"card influencer-profile-data\"}>\n                                <div className={\"card-body\"}>\n                                    <div className={\"row\"}>\n                                        <div className={\"row\"} style={{width: \"100%\"}}>\n                                            <div className=\"form-group col-xl-6 col-6\">\n                                                <label className={\"col-form-label\"}>Lista</label>\n                                                <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\", border: \"1px solid #ccc\"}} className={\"alert-heading\"} >{this.state.listaSeleccionadaNombre}</h4>\n                                            </div>\n                                            <div className=\"form-group col-xl-6 col-6\">\n                                                <label className={\"col-form-label\"}>Nombre de Elemento</label>\n                                                <input id=\"nombreElementoNuevo\" type=\"text\" className={\"form-control\"}/>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"} style={{width: \"100%\"}}>\n                                            <div className=\"form-group col-xl-6 col-6\">\n                                                <label className={\"col-form-label\"}>Valor de Elemento</label>\n                                                <input id=\"valorElementoNuevo\" type=\"text\" className={\"form-control\"}/>\n                                            </div>\n                                            <div className=\"form-group col-xl-6 col-6\">\n                                                <label className={\"col-form-label\"}>Tipo de Elemento</label>\n                                                <select id=\"listaTipoNuevo\" className={\"form-control\"}>\n                                                    <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                    {campos.map((campo, k) =>\n                                                        <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                                    )}\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <br/>\n                                    <div className={\"row\"}>\n                                        <button onClick={this.createElementList} className={\"btn btn-success btn-block col-xl-10 col-10\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\", margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <br/>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"card influencer-profile-data\"}>\n                                <div className={\"card-body\"}>\n                                    {this.state.variablesDeLista.map((elemento, i) =>\n                                        <div key={elemento.ID} className={\"row border-top border-bottom\"} style={{width: \"100%\"}}>\n                                            <div className={\"row\"} style={{width: \"100%\"}}>\n                                                <div className=\"form-group col-xl-6 col-6\">\n                                                    <label className={\"col-form-label\"}>Lista</label>\n                                                    <InlineEdit id={\"listaIdElemento\"+i} texto={elemento.listaID}> </InlineEdit>\n                                                </div>\n                                                <div className=\"form-group col-xl-6 col-6\">\n                                                    <label className={\"col-form-label\"}>Nombre de Elemento</label>\n                                                    <InlineEdit id={\"nombreElemento\"+i} texto={elemento.nombre}> </InlineEdit>\n                                                </div>\n                                            </div>\n                                            <div className={\"row\"} style={{width: \"100%\"}}>\n                                                <div className=\"form-group col-xl-6 col-6\">\n                                                    <label className={\"col-form-label\"}>Valor de Elemento</label>\n                                                    <InlineEdit id={\"valorElemento\"+i} texto={elemento.valor}> </InlineEdit>\n                                                </div>\n                                                <div className=\"form-group col-xl-6 col-6\">\n                                                    <label className={\"col-form-label\"}>Tipo de Elemento</label>\n                                                    <select id={\"listaTipo\"+i} className={\"form-control\"} defaultValue={elemento.tipo}>\n                                                        <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                        {campos.map((campo, k) =>\n                                                            <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                                        )}\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div className={\"row\"} style={{width: \"100%\"}}>\n                                                <button onClick={this.createElementList} className={\"btn btn-success btn-block col-xl-5 col-5\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\", margin: \"0 auto\", display: \"block\"}}>Guardar</button>\n                                                <button onClick={this.deleteElementList} className={\"btn btn-danger btn-block col-xl-5 col-5\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\", margin: \"0 auto\", display: \"block\"}}>Eliminar</button>\n                                            </div>\n                                            <div className={\"row\"} style={{width: \"100%\"}}>\n                                                <br/>\n                                            </div>\n                                        </div>\n                                    )}\n                                    { this.state.variablesDeLista.length == 0 ? (\n                                        <a className={\"btn btn-outline-dark btn-block btnWhiteColorHover fontSize1EM\"}>No existen variables creadas</a>\n                                    ) : (\n                                        <span></span>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n"],"file":"CrearYSeleccionarLista.js"}