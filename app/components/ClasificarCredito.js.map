{"version":3,"sources":["components/ClasificarCredito.js"],"names":["arregloPagos","arregloCreditos","arregloClientes","ordenarPagos","arregloCreditosTodos","sort","a","b","campoFecha","getTime","crearArregloClientes","i","length","insercionBinaria","crearArregloCreditos","crearArregloPagos","calcularDiasMora","arregloPrestamos","j","k","clasificarCreditos","Things","valor","campo","arregloAInsertar"],"mappings":"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","sourcesContent":["/***************\tVARIABLES\t***************/\nvar arregloPagos = [];\t\t//Arreglo que contiene los pagos individuales de los prestamos\n/*\t\t\t\t\t=arregloPagos=\n\t[cliente1]\t[prestamo1]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo2]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo3]\t\t[pago1, pago2, pago3]\n\t[cliente2]\t[prestamo1]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo2]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo3]\t\t[pago1, pago2, pago3]\n*/\nvar arregloCreditos = [];\t\t//Arreglo que contiene los prestamos ordenados ascendentemente por el id de cliente\n/*\t\t\t\t\t=arregloCreditos=\n\t[cliente1]\t[prestamo1, prestamo2, prestamo3]\n\t[cliente2]\t[prestamo1, prestamo2, prestamo3]\n\t[cliente3]\t[prestamo1, prestamo2, prestamo3]\n*/\nvar arregloClientes = [];\t\t//Arreglo que contiene los clientes ordenados ascendentemente por id\n/*\t\t\t\t\t=arregloClientes=\n\t[cliente1]\n\t[cliente2]\n\t[cliente3]\n*/\n\n\n/*\t\t\n\tDEF: Ordenar arreglo de pagos por fecha\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de pagos ordenado por fecha\n*/\n\nfunction ordenarPagos (arregloCreditosTodos) {\n\tarregloCreditosTodos.sort(function(a, b){\n            if(a.campoFecha.getTime() < b.campoFecha.getTime()) { return -1; }\n            if(a.campoFecha.getTime() > b.campoFecha.getTime()) { return 1; }\n            return 0;\n        });\n}\n\n\n/*\t\t\n\tDEF: Metodo para crear arreglo de clientes ordenados por id\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de clientes ordenados ascendentemente por id\n*/\n\nfunction crearArregloClientes (arregloCreditosTodos) {\n\tarregloClientes = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\tinsercionBinaria(arregloCreditosTodos[i], 'clienteID', arregloClientes);\n\t};\n}\n\n/*\t\t\n\tDEF: Metodo para crear arreglo de prestamos ordenados por id de cliente\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de prestamos ordenados por id de cliente\n*/\n\nfunction crearArregloCreditos (arregloCreditosTodos) {\n\tarregloCreditos = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\tinsercionBinaria(arregloCreditosTodos[i], 'numeroCuenta', arregloCreditos);\n\t};\n}\n\n/*\t\t\n\tDEF: Metodo para crear arreglo de pagos de prestamos ordenados por id de cliente\n\tINPUT: arreglo de todos los pagos de credito\n\tOUTPUT: arreglo de pagos de prestamos ordenados por id de cliente\n*/\n\nfunction crearArregloPagos (arregloCreditosTodos) {\n\tarregloPagos = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\tinsercionBinaria(arregloCreditosTodos[i], 'numeroCuenta', arregloPagos);\n\t};\n}\n\n\n/*\t\t\n\tDEF: Metodo para calcular los dias de mora\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de prestamos individuales con su valor de dias de mora\n*/\n\nfunction calcularDiasMora (arregloCreditosTodos) {\n\tvar arregloPrestamos = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\t//i = posicion cliente\n\t\tfor (var j = 0; j < arregloCreditosTodos[i].length; j++) {\n\t\t\t//j = posicion prestamo\n\t\t\tfor (var k = 0; k < arregloCreditosTodos[i][j].length; k++) {\n\t\t\t\t//k = posicion pago\n\t\t\t\tarregloPagos[i][j][k];\n\t\t\t};\n\t\t};\n\t};\n}\n\n/*\t\t\n\tDEF: Metodo para clasificar prestamos individuales\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arregloCreditos clasificado por prestamos individuales\n*/\n\nfunction clasificarCreditos (arregloCreditosTodos) {\n\tvar arregloPrestamos = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\t//i = posicion cliente\n\t\tfor (var j = 0; j < arregloCreditosTodos[i].length; j++) {\n\t\t\t//j = posicion prestamo\n\t\t\tfor (var k = 0; k < Things.length; k++) {\n\t\t\t\t//k = posicion pago\n\t\t\t};\n\t\t};\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* ================================\t\tINSERCION BINARIA\t\t================================*/\n\n/*\t\t\n\tDEF: Metodo para insertar binariamente\n\tINPUT: valor a buscar, campo a comparar, arreglo donde insertar\n\tOUTPUT:\n*/\n\nfunction insercionBinaria (valor, campo, arregloAInsertar) {\n}\n\n\n/* ================================\t\tUTILS\t\t================================*/\n"],"file":"ClasificarCredito.js"}