{"version":3,"sources":["components/ClasificarCarteraProceso/ClasificarCarteraProceso.js"],"names":["myWorker","Worker","tamanoFinalBandera","tamanoActualBandera","camposGuardar","arregloCamposTablasSeleccionadas","procesosACalcular","capacidadDeudor","diasMora","disponibilidadGarantias","entornoEconomico","tiposCredito","categoriasClasificacion","criteriosDeterioro","banderaGuardarResultadosTamActual","banderaGuardarResultadosTamFinal","tamanoFinalBanderaTIPOCREDITOS","tamanoActualBanderaTIPOCREDITOS","banderaGuardarResultadosTamActualTIPOCREDITOS","banderaGuardarResultadosTamFinalTIPOCREDITOS","tamanoActualBanderaCamposReglasTipoCreditoCampos","tamanoFinalBanderaCamposReglasTipoCreditoCampos","tamanoActualBanderaValoresReglasTipoCreditoCampos","tamanoFinalBanderaValoresReglasTipoCreditoCampos","tamanoFinalBanderaCATEGORIACLASIFICACION","tamanoActualBanderaCATEGORIACLASIFICACION","banderaGuardarResultadosTamActualCATEGORIACLASIFICACION","banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION","tamanoActualBanderaCamposReglasCategoriaClasificacionCampos","tamanoFinalBanderaCamposReglasCategoriaClasificacionCampos","tamanoActualBanderaValoresReglasCategoriaClasificacionCampos","tamanoFinalBanderaValoresReglasCategoriaClasificacionCampos","guardarTipoCredito","guardarCategoriaClasificacion","guardarMora","guardarCriterioDeterioro","ClasificarCarteraProceso","props","state","widthActual","tablasOrginales","tablasSeleccionadas","opcionesTablasSeleccionadas","loadTables","bind","selectTable","iniciarCalculoMora","iniciarTipoDeCreditos","iniciarCategoriasClasificacion","iniciarCriteriosDeterioro","tablasGuardarCampos","verificarGuardarCampos","verificarSeleccionoTablas","creandoArreglos","fetchDataComportamientoPago","getPrestamoTablaComportamientoPago","getPrestamoCamposDeTablaComportamientoPago","getPlanPagoTablaComportamientoPago","getPlanPagoCamposDeTablaComportamientoPago","initWebWorkerComportamientoPago","propiedadDeObjetoExisteEnTablaCampos","verificarProcesosAClasificar","obtenerTipoCredito","obtenerTipoCreditoCampos","fetchDataTipoCredito","fetchDataReglasTipoCreditoCampos","fetchDataCamposReglasTipoCreditoCampos","verificarCamposReglasTipoCreditoCampos","fetchDataValoresReglasTipoCreditoCampos","verificarValoresReglasTipoCreditoCampos","verifyTypeCreditFinal","checkFinishMethods","fetchDataCategoriaClasificacion","verifyClasificationCategoryFinal","fetchDataReglasCategoriaClasificacionCampos","verificarCamposReglasCategoriaClasificacionCampos","fetchDataCamposReglasCategoriaClasificacionCampos","fetchDataValoresReglasCategoriaClasificacionCampos","verifyDeteriorationCriteriaFinal","getFieldsToSave","startSavingObjects","saveObjectID","saveObjectIntField","saveObjectDecimalField","saveObjectDateField","saveObjecBoolField","saveObjectStringField","getCriterioDeterioro","formatDateCreation","onmessage","event","console","log","data","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","rollback","commit","i","recordset","length","active","setState","index","existeTablaEnConf","ID","tablasSelCopiaTemp","push","undefined","tipoCreditoNombre","nombre","tipoCredito","alert","tablaID","posicionArregloTablasSel","usuario","password","contrasena","servidor","basedatos","baseDatos","tabla","ConnectionPool","user","server","database","stream","connectionTimeout","requestTimeout","max","min","idleTimeoutMillis","options","useUTC","connect","valoresTabla","identificadorCliente","filter","object","funcion","localeCompare","identificadorPrestamo","camposAGuardarCliente","camposAGuardarPrestamo","splice","tipo","concat","self","e","prestamoTablaID","ComportamientoPago","getFieldsFromCamposTable","camposDePrestamoTabla","valoresDeTablaPrestamo","planPagoTablaID","getPlanPagosCamposDeTablaComportamientoPago","camposDePlanPagoTabla","valoresDeTablaPlanPago","prestamoTabla","getFieldsComportamientoPago","idClientePrestamoCampoID","idClientePlanPagoCampoID","numeroPrestamoCampoID","numeroPlanPagoCampoID","pagoCapitalPrestamoCampoID","pagoCapitalPlanPagoCampoID","pagoImpuestosPrestamoCampoID","pagoImpuestosPlanPagoCampoID","fechaPrestamoCampoID","fechaPlanPagoCampoID","iniciarProceso","banderaMetodoLlamado","callbackParam","camposTabla","Object","keys","forEach","key","arregloReglasTipoCreditos","arregloTipoCreditos","j","regla","campoCampoID","campoValor","idsValores","valor","split","k","esListaValor","id","esLista","valorValores","verificarValoresReglasCategoriaClasificacionCampos","calcular","arregloDeCamposAGuardar","camposDeCliente","camposDePrestamo","clientes","prestamos","objeto","fecha","Date","nombreTablaOrigenTipo","categoriaClasificacion","nombreMesPlan","valorMesPlan","mesDelPlan","nombreDiasMora","valorDiasMora","nombreCapitalPagado","valorCapitalPagado","t0talC4pitalPagado","nombreCapitalDeberiaPagado","valorCapitalDeberiaPagado","t0talC4pitalD3beriaPagado","nombreImpuestosPagado","valorImpuestosPagado","t0tal1mpu3stosPagado","nombreImpuestosDeberiaPagado","valorImpuestosDeberiaPagado","t0tal1mpu3stosD3beriaPagado","identificador","idPadre","idObjeto","arreglo","identificadorCampoNombre","verifyResultID","verifyResultField","date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","height","width","display","alignItems","justifyContent","overflowX","overflowY","whiteSpace","borderRadius","padding","border","position","backgroundColor","top","left","transform","borderBottom","textAlign","verticalAlign","borderTop","color","fontSize","fontWeight","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport SeleccionarTablaClasificarCarteraProceso from './SeleccionarTablaClasificarCarteraProceso.js';\nimport ConfiguracionTablasClasificar from './ConfiguracionTablasClasificar.js';\n\nimport {constructor, retornarClientes, retornarPrestamos} from \"../ClasificarCreditoD.js\";\n\nconst myWorker = new Worker(\"./components/ClasificarCredito.js\");\n\n//import \"../../libs/moment/min/moment.min.js\";\n\nvar tamanoFinalBandera = 0, tamanoActualBandera = 0, camposGuardar, arregloCamposTablasSeleccionadas = [];\nvar procesosACalcular = {capacidadDeudor: false, diasMora: false, disponibilidadGarantias: false, entornoEconomico: false, tiposCredito: false, categoriasClasificacion: false, criteriosDeterioro: false};\nvar banderaGuardarResultadosTamActual, banderaGuardarResultadosTamFinal;\nvar tamanoFinalBanderaTIPOCREDITOS = 0, tamanoActualBanderaTIPOCREDITOS = 0, banderaGuardarResultadosTamActualTIPOCREDITOS = 0, banderaGuardarResultadosTamFinalTIPOCREDITOS = 0, tamanoActualBanderaCamposReglasTipoCreditoCampos = 0, tamanoFinalBanderaCamposReglasTipoCreditoCampos = 0, tamanoActualBanderaValoresReglasTipoCreditoCampos = 0, tamanoFinalBanderaValoresReglasTipoCreditoCampos = 0;\nvar tamanoFinalBanderaCATEGORIACLASIFICACION = 0, tamanoActualBanderaCATEGORIACLASIFICACION = 0, banderaGuardarResultadosTamActualCATEGORIACLASIFICACION = 0, banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION = 0, tamanoActualBanderaCamposReglasCategoriaClasificacionCampos = 0, tamanoFinalBanderaCamposReglasCategoriaClasificacionCampos = 0, tamanoActualBanderaValoresReglasCategoriaClasificacionCampos = 0, tamanoFinalBanderaValoresReglasCategoriaClasificacionCampos = 0;\nvar guardarTipoCredito = false, guardarCategoriaClasificacion = false, guardarMora = false, guardarCriterioDeterioro = false;\n\nexport default class ClasificarCarteraProceso extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            widthActual: \"33%\",\n            tablasOrginales: [],\n            tablasSeleccionadas: [],\n            opcionesTablasSeleccionadas: []\n        }\n        this.loadTables = this.loadTables.bind(this);\n        this.selectTable = this.selectTable.bind(this);\n        this.iniciarCalculoMora = this.iniciarCalculoMora.bind(this);\n        this.iniciarTipoDeCreditos = this.iniciarTipoDeCreditos.bind(this);\n        this.iniciarCategoriasClasificacion = this.iniciarCategoriasClasificacion.bind(this);\n        this.iniciarCriteriosDeterioro = this.iniciarCriteriosDeterioro.bind(this);\n        this.tablasGuardarCampos = this.tablasGuardarCampos.bind(this);\n        this.verificarGuardarCampos = this.verificarGuardarCampos.bind(this);\n        this.verificarSeleccionoTablas = this.verificarSeleccionoTablas.bind(this);\n        this.creandoArreglos = this.creandoArreglos.bind(this);\n        this.fetchDataComportamientoPago = this.fetchDataComportamientoPago.bind(this);\n        this.getPrestamoTablaComportamientoPago = this.getPrestamoTablaComportamientoPago.bind(this);\n        this.getPrestamoCamposDeTablaComportamientoPago = this.getPrestamoCamposDeTablaComportamientoPago.bind(this);\n        this.getPlanPagoTablaComportamientoPago = this.getPlanPagoTablaComportamientoPago.bind(this);\n        this.getPlanPagoCamposDeTablaComportamientoPago = this.getPlanPagoCamposDeTablaComportamientoPago.bind(this);\n        this.initWebWorkerComportamientoPago = this.initWebWorkerComportamientoPago.bind(this);\n        this.propiedadDeObjetoExisteEnTablaCampos = this.propiedadDeObjetoExisteEnTablaCampos.bind(this);\n        this.verificarProcesosAClasificar = this.verificarProcesosAClasificar.bind(this);\n        this.obtenerTipoCredito = this.obtenerTipoCredito.bind(this);\n        this.obtenerTipoCreditoCampos = this.obtenerTipoCreditoCampos.bind(this);\n        this.fetchDataTipoCredito = this.fetchDataTipoCredito.bind(this);\n        this.fetchDataReglasTipoCreditoCampos = this.fetchDataReglasTipoCreditoCampos.bind(this);\n        this.fetchDataCamposReglasTipoCreditoCampos = this.fetchDataCamposReglasTipoCreditoCampos.bind(this);\n        this.verificarCamposReglasTipoCreditoCampos = this.verificarCamposReglasTipoCreditoCampos.bind(this);\n        this.fetchDataValoresReglasTipoCreditoCampos = this.fetchDataValoresReglasTipoCreditoCampos.bind(this);\n        this.verificarValoresReglasTipoCreditoCampos = this.verificarValoresReglasTipoCreditoCampos.bind(this);\n        this.verifyTypeCreditFinal = this.verifyTypeCreditFinal.bind(this);\n        this.checkFinishMethods = this.checkFinishMethods.bind(this);\n        this.fetchDataCategoriaClasificacion = this.fetchDataCategoriaClasificacion.bind(this);\n        this.verifyClasificationCategoryFinal = this.verifyClasificationCategoryFinal.bind(this);\n        this.fetchDataReglasCategoriaClasificacionCampos = this.fetchDataReglasCategoriaClasificacionCampos.bind(this);\n        this.verificarCamposReglasCategoriaClasificacionCampos = this.verificarCamposReglasCategoriaClasificacionCampos.bind(this);\n        this.fetchDataCamposReglasCategoriaClasificacionCampos = this.fetchDataCamposReglasCategoriaClasificacionCampos.bind(this);\n        this.fetchDataValoresReglasCategoriaClasificacionCampos = this.fetchDataValoresReglasCategoriaClasificacionCampos.bind(this);\n        this.verifyDeteriorationCriteriaFinal = this.verifyDeteriorationCriteriaFinal.bind(this);\n        this.getFieldsToSave = this.getFieldsToSave.bind(this);\n        this.startSavingObjects = this.startSavingObjects.bind(this);\n        this.saveObjectID = this.saveObjectID.bind(this);\n        this.saveObjectIntField = this.saveObjectIntField.bind(this);\n        this.saveObjectDecimalField = this.saveObjectDecimalField.bind(this);\n        this.saveObjectDateField = this.saveObjectDateField.bind(this);\n        this.saveObjecBoolField = this.saveObjecBoolField.bind(this);\n        this.saveObjectStringField = this.saveObjectStringField.bind(this);\n        this.getCriterioDeterioro = this.getCriterioDeterioro.bind(this);\n        this.formatDateCreation = this.formatDateCreation.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadTables();\n        //myWorker.postMessage([\"comportamientoPago\", sql]);\n        myWorker.onmessage = function (event) {\n            console.log('EN MAIN JS');\n            console.log(event.data);\n        };\n    }\n\n    loadTables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            result.recordset[i].active = false;\n                        };\n                        this.setState({\n                            tablasOrginales: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    selectTable(index) {\n        let existeTablaEnConf = false;\n        this.state.tablasOrginales[index].active = !this.state.tablasOrginales[index].active;\n        this.setState({\n            tablasOrginales: this.state.tablasOrginales\n        });\n        for (var i = 0; i < this.state.tablasSeleccionadas.length; i++) {\n            if(this.state.tablasOrginales[index].ID == this.state.tablasSeleccionadas[i].ID) {\n                existeTablaEnConf = true;\n                break;\n            }\n        };\n        if(!existeTablaEnConf) {\n            let tablasSelCopiaTemp = [...this.state.tablasSeleccionadas];\n            tablasSelCopiaTemp.push(this.state.tablasOrginales[index]);\n            this.setState({\n                tablasSeleccionadas: tablasSelCopiaTemp\n            });\n            if(tablasSelCopiaTemp.length == 1) {\n                this.setState({\n                    widthActual: \"100%\"\n                });\n            } else if(tablasSelCopiaTemp.length == 2) {\n                this.setState({\n                    widthActual: \"50%\"\n                });\n            } else {\n                this.setState({\n                    widthActual: \"33%\"\n                });\n            }\n            this.verificarProcesosAClasificar(this.state.tablasOrginales[index].ID);\n        }\n    }\n\n    //metodo para agregar tipo de credito, tipo de cliente, criterios de clasificacion por tabla\n    verificarProcesosAClasificar(index) {\n        //opcionesTablasSeleccionadas\n        //this.obtenerTipoCredito(index);\n    }\n\n    obtenerTipoCredito(index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from TipoCredito where tablaID = \"+index, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0) {\n                            let tablasSelCopiaTemp = [...this.state.opcionesTablasSeleccionadas];\n                            if(tablasSelCopiaTemp[this.state.tablasSeleccionadas.length-1] == undefined)\n                                tablasSelCopiaTemp[this.state.tablasSeleccionadas.length-1] = {};\n                            tablasSelCopiaTemp[this.state.tablasSeleccionadas.length-1].tipoCreditoNombre = result.recordset[0].nombre;\n                            this.setState({\n                                opcionesTablasSeleccionadas: tablasSelCopiaTemp\n                            });\n                            this.obtenerTipoCreditoCampos(result.recordset[0].ID);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    obtenerTipoCreditoCampos (ID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from TipoCreditoCampo where tipoCreditoID = \"+ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        let tablasSelCopiaTemp = [...this.state.opcionesTablasSeleccionadas];\n                        if(tablasSelCopiaTemp[this.state.tablasSeleccionadas.length-1] == undefined)\n                            tablasSelCopiaTemp[this.state.tablasSeleccionadas.length-1] = {};\n                        tablasSelCopiaTemp[this.state.tablasSeleccionadas.length-1].tipoCredito = result.recordset;\n                        this.setState({\n                            opcionesTablasSeleccionadas: tablasSelCopiaTemp\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarSeleccionoTablas() {\n        if(this.state.tablasSeleccionadas.length > 0) {\n            this.creandoArreglos();\n        } else {\n            alert(\"Seleccione por lo menos una tabla\");\n        }\n    }\n\n    creandoArreglos() {\n        camposGuardar = [];\n        tamanoFinalBandera = this.state.tablasOrginales.length, tamanoActualBandera = 0;\n        for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n            this.tablasGuardarCampos(this.state.tablasOrginales[i].ID, i);\n        };\n\n        /*for (var i = 0; i < this.state.tablasSeleccionadas.length; i++) {\n            //this.state.tablasSeleccionadas[i]\n            var calcularComportamientoPago = false;\n            var primeraVezEntra = true; //agregar valores de tabla a arreglo global de clientes, prestamos y pagos en ClasificarCartera.js\n            if($(\"#ComportamientoPago\"+i).prop('checked') == true)\n                calcularComportamientoPago = true;\n\n            if(calcularComportamientoPago) {\n                this.fetchDataComportamientoPago(this.state.tablasSeleccionadas[i].ID);\n                if(primeraVezEntra) {\n                    primeraVezEntra = false;\n                }\n            }\n            this.fetchDataTipoCredito(this.state.tablasSeleccionadas[i].ID);\n        };*/\n    }\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n                        INICIAR ARREGLOS\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    tablasGuardarCampos (tablaID, posicionArregloTablasSel) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+tablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var usuario = result.recordset[0].usuario;\n                        var password = result.recordset[0].contrasena;\n                        var servidor = result.recordset[0].servidor;\n                        var basedatos = result.recordset[0].baseDatos;\n                        var tabla = result.recordset[0].tabla;\n\n                        /*              CONSIGUIENDO VALORES DE TABLA         */\n                        const pool = new sql.ConnectionPool({\n                            user: usuario,\n                            password: password,\n                            server: servidor,\n                            database: basedatos,\n                            stream: true,\n                            connectionTimeout: 900000,\n                            requestTimeout: 900000,\n                            pool: {\n                                max: 40,\n                                min: 0,\n                                idleTimeoutMillis: 30000\n                            },\n                            options: {\n                                useUTC: false\n                            }\n                        });\n                        pool.connect(err => {\n                            pool.request() // or: new sql.Request(pool1)\n                            .query(\"select * from \"+tabla, (err, result) => {\n                                if(result != undefined) {\n                                    this.verificarGuardarCampos(tablaID, result.recordset, posicionArregloTablasSel);\n                                } else {\n                                    //agregar error fallo connecion tabla (no existe o malos campos)\n                                }\n                            });\n                        }); // fin pool connect\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarGuardarCampos (tablaID, valoresTabla, posicionArregloTablasSel) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+tablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var identificadorCliente = result.recordset.filter(function( object ) {\n                                                        return object.funcion.localeCompare(\"Identificador\") == 0 && object.tabla.localeCompare(\"Cliente\") == 0;\n                                                    });\n                        var identificadorPrestamo = result.recordset.filter(function( object ) {\n                                                        return object.funcion.localeCompare(\"Identificador\") == 0 && object.tabla.localeCompare(\"Préstamo\") == 0;\n                                                    });\n                        var camposAGuardarCliente = result.recordset.filter(function( object ) {\n                                                        return object.tabla.localeCompare(\"Cliente\") == 0;\n                                                    });\n                        var camposAGuardarPrestamo = result.recordset.filter(function( object ) {\n                                                        return object.tabla.localeCompare(\"Préstamo\") == 0;\n                                                    });\n                        arregloCamposTablasSeleccionadas.splice(posicionArregloTablasSel, 0, result.recordset);\n                        if(identificadorCliente.length == 0 && identificadorPrestamo.length == 0) {\n                            alert(\"Tiene que ingresar un campo Identificador para Cliente o para Préstamo\");\n                        } else {\n                            //viendo si se llama metodo crear arreglo para clientes y prestamos o solo uno\n                            tamanoActualBandera++;\n                            if(identificadorCliente.length > 0 && identificadorPrestamo.length > 0) {\n                                //myWorker.postMessage([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, false]);\n                                //myWorker.postMessage([\"iniciarArregloPrestamos\", valoresTabla, identificadorCliente[0].nombre, identificadorPrestamo[0].nombre, identificadorCliente[0].tipo, identificadorPrestamo[0].tipo, camposAGuardarPrestamo, true]);\n                                constructor([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, false]);\n                                constructor([\"iniciarArregloPrestamos\", valoresTabla, identificadorCliente[0].nombre, identificadorPrestamo[0].nombre, identificadorCliente[0].tipo, identificadorPrestamo[0].tipo, camposAGuardarPrestamo, true]);\n                                camposGuardar.concat(result.recordset);\n                                this.iniciarCalculoMora();\n                                let self = this;\n                                myWorker.onmessage = function(e) {\n                                    if(e.data == 'terminoCrearArreglos') {\n                                        //revisando que procedimientos llamar\n                                        self.iniciarCalculoMora();\n                                    }\n                                }\n                            } else {\n                                if(identificadorCliente.length > 0) {\n                                    //myWorker.postMessage([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, true]);\n                                    constructor([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, true]);\n                                    let self = this;\n                                    camposGuardar.concat(result.recordset);\n                                    this.iniciarCalculoMora();\n                                    myWorker.onmessage = function(e) {\n                                        console.log(\"llamado de vuelta\");\n                                        console.log(e);\n                                        if(e.data == 'terminoCrearArreglos') {\n                                            //revisando que procedimientos llamar\n                                            self.iniciarCalculoMora();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        INICIAR ARREGLOS\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        COMPORTAMIENTO PAGO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    iniciarCalculoMora () {\n        //como no tiene id prestamo o cliente, no se puede calcular comportamiento plan pago, agregar mensaje bitacora  // si verificarComportamientoPago == false\n        if( tamanoActualBandera == tamanoFinalBandera ) {\n            guardarTipoCredito = false, guardarCategoriaClasificacion = false, guardarMora = false, guardarCriterioDeterioro = false;\n            banderaGuardarResultadosTamActual = 0;\n            banderaGuardarResultadosTamFinal = this.state.tablasOrginales.length;\n            for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n                this.fetchDataComportamientoPago(this.state.tablasOrginales[i].ID);\n            };\n        }\n    }\n\n    fetchDataComportamientoPago (prestamoTablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ComportamientoPago where prestamoTablaID = \"+prestamoTablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        //banderaGuardarResultadosTamFinal += result.recordset.length;\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.getPrestamoTablaComportamientoPago(result.recordset[i]);\n                        }\n                        if(result.recordset.length == 0) {\n                            this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getPrestamoTablaComportamientoPago(ComportamientoPago) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+ComportamientoPago.prestamoTablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length == 0) {\n                            this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        } else {\n                            this.getPrestamoCamposDeTablaComportamientoPago(result.recordset[0], ComportamientoPago);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getPrestamoCamposDeTablaComportamientoPago(tabla, ComportamientoPago) {\n        let self = this;\n        this.getFieldsFromCamposTable(tabla, ComportamientoPago, \"prestamos\", function(camposDePrestamoTabla, valoresDeTablaPrestamo, ComportamientoPago) {\n            self.getPlanPagoTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, ComportamientoPago);\n        });\n    }\n\n    getPlanPagoTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, ComportamientoPago) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+ComportamientoPago.planPagoTablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length == 0) {\n                            this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        } else {\n                            this.getPlanPagosCamposDeTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, result.recordset[0], ComportamientoPago);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getPlanPagosCamposDeTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, tabla, ComportamientoPago) {\n        guardarMora = true;\n        let self = this;\n        this.getFieldsFromCamposTable(tabla, ComportamientoPago, \"planpagos\", function(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago) {\n            self.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago, true);\n        }, camposDePrestamoTabla, valoresDeTablaPrestamo);\n    }\n\n    getPlanPagoCamposDeTablaComportamientoPago(prestamoTabla, camposDePrestamoTabla, tabla, ComportamientoPago) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+tabla.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n\n                        /*              CONSIGUIENDO VALORES DE TABLA DE PLAN DE PAGOS         */\n                        const pool = new sql.ConnectionPool({\n                            user: tabla.usuario,\n                            password: tabla.contrasena,\n                            server: tabla.servidor,\n                            database: tabla.baseDatos,\n                            stream: true,\n                            connectionTimeout: 900000,\n                            requestTimeout: 900000,\n                            pool: {\n                                max: 40,\n                                min: 0,\n                                idleTimeoutMillis: 30000\n                            },\n                            options: {\n                                useUTC: false\n                            }\n                        });\n                        pool.connect(err => {\n                            pool.request() // or: new sql.Request(pool1)\n                            .query(\"select * from \"+tabla.tabla, (err, result) => {\n                                this.getFieldsComportamientoPago(prestamoTabla, camposDePrestamoTabla, result.recordset, ComportamientoPago);\n                            });\n                        }); // fin pool connect\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where ID = \"+ComportamientoPago.idClientePrestamoCampoID+\" or ID = \"+ComportamientoPago.idClientePlanPagoCampoID+\" or ID = \"+ComportamientoPago.numeroPrestamoCampoID+\" or ID = \"+ComportamientoPago.numeroPlanPagoCampoID+\" or ID = \"+ComportamientoPago.pagoCapitalPrestamoCampoID+\" or ID = \"+ComportamientoPago.pagoCapitalPlanPagoCampoID+\" or ID = \"+ComportamientoPago.pagoImpuestosPrestamoCampoID+\" or ID = \"+ComportamientoPago.pagoImpuestosPlanPagoCampoID+\" or ID = \"+ComportamientoPago.fechaPrestamoCampoID+\" or ID = \"+ComportamientoPago.fechaPlanPagoCampoID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        console.log(\"4\");\n                        this.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, result.recordset, ComportamientoPago, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        console.log(\"44\");\n                        this.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, result.recordset, ComportamientoPago, true);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    initWebWorkerComportamientoPago (camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago, iniciarProceso) {\n        //myWorker.postMessage([\"comportamientoPago\", camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago]);\n        banderaGuardarResultadosTamActual++;\n        console.log('banderaGuardarResultadosTamFinal = '+banderaGuardarResultadosTamFinal);\n        console.log('banderaGuardarResultadosTamActual = '+banderaGuardarResultadosTamActual);\n        if(iniciarProceso)\n            constructor([\"comportamientoPago\", camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago]);\n        //this.checkFinishMethods();\n        if(banderaGuardarResultadosTamFinal == banderaGuardarResultadosTamActual) {\n            this.iniciarTipoDeCreditos();\n        }\n    }\n\n    getFieldsFromCamposTable (tabla, ComportamientoPago, banderaMetodoLlamado, callbackParam, camposDePrestamoTabla, valoresDeTablaPrestamo) {\n        let self = this;\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+tabla.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        //banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, result.recordset, ComportamientoPago, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n\n                        /*              UTILIZAR UN \"WEBPACK\" Y HACER WEB WORKER PARA GUARDAR O TRAER COSAS (sql en web worker)        */\n\n                        /*              CONSIGUIENDO VALORES DE TABLA DE PRESTAMOS         */\n                        const pool = new sql.ConnectionPool({\n                            user: tabla.usuario,\n                            password: tabla.contrasena,\n                            server: tabla.servidor,\n                            database: tabla.baseDatos,\n                            stream: true,\n                            connectionTimeout: 900000,\n                            requestTimeout: 900000,\n                            pool: {\n                                max: 40,\n                                min: 0,\n                                idleTimeoutMillis: 30000\n                            },\n                            options: {\n                                useUTC: false\n                            }\n                        });\n                        let camposTabla = result.recordset;\n                        pool.connect(err => {\n                            pool.request() // or: new sql.Request(pool1)\n                            .query(\"select * from \"+tabla.tabla, (err, result) => {\n                                console.log(result);\n                                console.log(err);\n                                /*var nuevoArregloTrans = [];\n                                for (var i = 0; i < result.recordset.length; i++) {\n                                    console.log(result.recordset[i]);\n                                    console.log(result.recordset[i].length);\n                                    for (var k = 0; k < result.recordset[i].length; k++) {\n                                        console.log(result.recordset[i][k]);\n                                        for (var j = 0; j < camposTabla.length; j++) {\n                                            if(j==0) {\n                                                nuevoArregloTrans.push({});\n                                                console.log(result.recordset[i]);\n                                                console.log(result.recordset[i][k]);\n                                                nuevoArregloTrans[i].camposTabla[j].nombre = result.recordset[i][k][camposTabla[j].nombre]\n                                            } else\n                                                nuevoArregloTrans[i].camposTabla[j].nombre = result.recordset[i][k][camposTabla[j].nombre]\n                                        };\n                                    }\n                                };*/\n                                for (var i = 0; i < result.recordset.length; i++) {\n                                    Object.keys(result.recordset[i]).forEach(function(key,index) {\n                                        // key: the name of the object key\n                                        // index: the ordinal position of the key within the object\n                                        if(!self.propiedadDeObjetoExisteEnTablaCampos(camposTabla, key)) {\n                                            delete result.recordset[i][key];\n                                        }\n                                    });\n                                }\n                                console.log(\"result.recordset\");\n                                console.log(result.recordset);\n                                //result.recordset = nuevoArregloTrans;\n                                if(banderaMetodoLlamado == 'prestamos')\n                                    callbackParam(camposTabla, result.recordset, ComportamientoPago);\n                                else\n                                    callbackParam(camposDePrestamoTabla, valoresDeTablaPrestamo, camposTabla, result.recordset, ComportamientoPago);\n                                //callbackParam(result.recordset, ComportamientoPago);\n                                //eval(\"this.\"+callbackParam+\"(\"+result.recordset+\", \"+camposTabla+\", \"+ComportamientoPago+\");\");\n                            });\n                        }); // fin pool connect\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    propiedadDeObjetoExisteEnTablaCampos(camposTabla, key) {\n        for (var i = 0; i < camposTabla.length; i++) {\n            if (camposTabla[i].nombre.localeCompare(key) == 0) {\n                return true;\n            }\n        };\n        return false;\n    }\n\n\n    hacerChekeosDeVariablesAlImportar () {\n        /*\n\n            EN RESULT DE CAMPOS DESPUES DE TRAER POR TABLA ID\n\n            if(result.recordset[i].tipo.localeCompare(\"bit\") == 0 || result.recordset[i].tipo.localeCompare(\"date\") == 0 || result.recordset[i].tipo.localeCompare(\"varchar\") == 0) {\n                if(result.recordset[i].tipo.localeCompare(\"bit\") == 0 || result.recordset[i].tipo.localeCompare(\"varchar\") == 0) {\n                    if(selectFieldsQueryString.length > 0)\n                        selectFieldsQueryString+=\", \";\n                    selectFieldsQueryString+=result.recordset[i].nombre;\n                } else if(result.recordset[i].tipo.localeCompare(\"date\") == 0) {\n                    if(selectFieldsQueryString.length > 0)\n                        selectFieldsQueryString+=\", \";\n                    selectFieldsQueryString+=result.recordset[i].nombre;\n                }\n            } else if(result.recordset[i].tipo.localeCompare(\"int\") == 0) {\n                if(selectFieldsQueryString.length > 0)\n                    selectFieldsQueryString+=\", \";\n                selectFieldsQueryString+=result.recordset[i].nombre;\n            }\n        */\n    }\n\n    /*  \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****    \n        *****   *****   *****       *****   *****   *****   *****\n                        COMPORTAMIENTO PAGO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        TIPO DE CREDITOS\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    iniciarTipoDeCreditos () {\n        banderaGuardarResultadosTamActualTIPOCREDITOS = 0;\n        banderaGuardarResultadosTamFinalTIPOCREDITOS = 0;\n        //for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n            this.fetchDataTipoCredito();\n        //};\n    }\n\n    fetchDataTipoCredito () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from TipoCredito\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActualTIPOCREDITOS++;\n                        this.verifyTypeCreditFinal(null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        //arregloCamposTipoCreditos: Cada posicion del arreglo corresponde a la del tipo de credito\n                        var arregloReglasTipoCreditos = [];\n                        tamanoFinalBanderaTIPOCREDITOS = result.recordset.length, tamanoActualBanderaTIPOCREDITOS = 0;\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.fetchDataReglasTipoCreditoCampos(result.recordset[i], arregloReglasTipoCreditos, i, result.recordset);\n                        }\n                        if(result.recordset.length == 0) {\n                            this.verifyTypeCreditFinal(null, null, false);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    fetchDataReglasTipoCreditoCampos (tipoCredito, arregloReglasTipoCreditos, i, arregloTipoCreditos) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Reglas where nombreTablaRes = 'TipoCredito' and idTipoTabla=\"+tipoCredito.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActualTIPOCREDITOS++;\n                        this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        tamanoActualBanderaTIPOCREDITOS++;\n                        //banderaGuardarResultadosTamActualTIPOCREDITOS++;\n                        arregloReglasTipoCreditos[i] = result.recordset;\n                        //verificando si este credito tiene reglas asociadas, si no no sumar a banderaGuardarResultadosTamFinalTIPOCREDITOS\n                        this.verificarCamposReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarCamposReglasTipoCreditoCampos (arregloTipoCreditos, arregloReglasTipoCreditos) {\n        if(tamanoActualBanderaTIPOCREDITOS == tamanoFinalBanderaTIPOCREDITOS) {\n            tamanoActualBanderaCamposReglasTipoCreditoCampos = 0, tamanoFinalBanderaCamposReglasTipoCreditoCampos = 0;\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                if(arregloReglasTipoCreditos[i] != undefined) {\n                    for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                        tamanoFinalBanderaCamposReglasTipoCreditoCampos++;\n                    };\n                }\n            };\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                if(arregloReglasTipoCreditos[i] != undefined) {\n                    for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                        this.fetchDataCamposReglasTipoCreditoCampos(arregloReglasTipoCreditos[i][j], arregloReglasTipoCreditos, i, j, arregloTipoCreditos);\n                    };\n                }\n            };\n        }\n    }\n\n    fetchDataCamposReglasTipoCreditoCampos (regla, arregloReglasTipoCreditos, i, j, arregloTipoCreditos) {\n        if(regla.campoCampoID != -1) {\n            console.log('1111111y');\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select * from Campos where ID = \"+regla.campoCampoID, (err, result) => {\n                    if (err) {\n                        if (!rolledBack) {\n                            console.log(err);\n                            banderaGuardarResultadosTamActualTIPOCREDITOS++;\n                            this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false);\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            tamanoActualBanderaCamposReglasTipoCreditoCampos++;\n                            arregloReglasTipoCreditos[i][j].campoValor = result.recordset[0];\n                            this.verificarValoresReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos);\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else if(regla.campoCampoID == -1) {\n            console.log('222222222y');\n            tamanoActualBanderaCamposReglasTipoCreditoCampos++;\n            arregloReglasTipoCreditos[i][j].campoValor = {nombre: \"diasMora\", tabla: \"Préstamo\"};\n            this.verificarValoresReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos);\n        }\n    }\n\n    verificarValoresReglasTipoCreditoCampos (arregloTipoCreditos, arregloReglasTipoCreditos) {\n        if(tamanoActualBanderaCamposReglasTipoCreditoCampos == tamanoFinalBanderaCamposReglasTipoCreditoCampos) {\n            tamanoActualBanderaValoresReglasTipoCreditoCampos = 0, tamanoFinalBanderaValoresReglasTipoCreditoCampos = 0;\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                    var idsValores = arregloReglasTipoCreditos[i][j].valor.split(\",\");\n                    for (var k = 0; k < idsValores.length; k++) {\n                        tamanoFinalBanderaValoresReglasTipoCreditoCampos++;\n                    };\n                };\n            };\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                    var idsValores = arregloReglasTipoCreditos[i][j].valor.split(\",\");\n                    for (var k = 0; k < idsValores.length; k++) {\n                        banderaGuardarResultadosTamFinalTIPOCREDITOS++;\n                        this.fetchDataValoresReglasTipoCreditoCampos(idsValores[k], arregloReglasTipoCreditos[i][j].esListaValor, arregloReglasTipoCreditos, i, j, arregloTipoCreditos);\n                    };\n                };\n            };\n        }\n    }\n\n    fetchDataValoresReglasTipoCreditoCampos (id, esLista, arregloReglasTipoCreditos, i, j, arregloTipoCreditos) {\n        var tabla;\n        if(esLista)\n            tabla = 'VariablesdeLista';\n        else\n            tabla = 'Campos';\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from \"+tabla+\" where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActualTIPOCREDITOS++;\n                        this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        tamanoActualBanderaValoresReglasTipoCreditoCampos++;\n                        if(arregloReglasTipoCreditos[i][j].valorValores == undefined)\n                            arregloReglasTipoCreditos[i][j].valorValores = [];\n                        arregloReglasTipoCreditos[i][j].valorValores.push(result.recordset[0]);\n                        guardarTipoCredito = true;\n                        this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, true);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verifyTypeCreditFinal (arregloTipoCreditos, arregloReglasTipoCreditos, iniciarProceso) {\n        banderaGuardarResultadosTamActualTIPOCREDITOS++;\n        if(banderaGuardarResultadosTamFinalTIPOCREDITOS == 0)\n            banderaGuardarResultadosTamFinalTIPOCREDITOS++;\n        if(tamanoActualBanderaValoresReglasTipoCreditoCampos == tamanoFinalBanderaValoresReglasTipoCreditoCampos) {\n            console.log(arregloTipoCreditos);\n            console.log(arregloReglasTipoCreditos);\n            //myWorker.postMessage([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            if(iniciarProceso)\n                constructor([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            //this.checkFinishMethods();\n            console.log(\"banderaGuardarResultadosTamFinalTIPOCREDITOS = \"+banderaGuardarResultadosTamFinalTIPOCREDITOS);\n            console.log(\"banderaGuardarResultadosTamActualTIPOCREDITOS = \"+banderaGuardarResultadosTamActualTIPOCREDITOS);\n            if(banderaGuardarResultadosTamActualTIPOCREDITOS == banderaGuardarResultadosTamFinalTIPOCREDITOS) {\n                this.iniciarCategoriasClasificacion();\n            }\n            /*var self = this;\n            setTimeout(function(){\n                self.iniciarCategoriasClasificacion();\n            }, 3000);*/\n        }\n    }\n\n    /* \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****     \n        *****   *****   *****       *****   *****   *****   *****\n                        TIPO DE CREDITOS\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CATEGORIAS CLASIFICACION\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    iniciarCategoriasClasificacion () {\n        banderaGuardarResultadosTamActualCATEGORIACLASIFICACION = 0;\n        banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION = 0;\n        //for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n            this.fetchDataCategoriaClasificacion();\n        //};\n    }\n\n    fetchDataCategoriaClasificacion () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from CategoriaClasificacion\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        //banderaGuardarResultadosTamActual++;\n                        this.verifyClasificationCategoryFinal(null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        //arregloCamposTipoCreditos: Cada posicion del arreglo corresponde a la del tipo de credito\n                        var arregloReglasTipoCreditos = [];\n                        tamanoFinalBanderaCATEGORIACLASIFICACION = result.recordset.length, tamanoActualBanderaCATEGORIACLASIFICACION = 0;\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.fetchDataReglasCategoriaClasificacionCampos(result.recordset[i], arregloReglasTipoCreditos, i, result.recordset);\n                        }\n                        if(result.recordset.length == 0) {\n                            this.verifyClasificationCategoryFinal(null, null, false);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    fetchDataReglasCategoriaClasificacionCampos (tipoCredito, arregloReglasTipoCreditos, i, arregloTipoCreditos) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Reglas where nombreTablaRes = 'CategoriaClasificacion' and idTipoTabla=\"+tipoCredito.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        //banderaGuardarResultadosTamActual++;\n                        this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        tamanoActualBanderaCATEGORIACLASIFICACION++;\n                        arregloReglasTipoCreditos[i] = result.recordset;\n                        this.verificarCamposReglasCategoriaClasificacionCampos(arregloTipoCreditos, arregloReglasTipoCreditos);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarCamposReglasCategoriaClasificacionCampos (arregloTipoCreditos, arregloReglasTipoCreditos) {\n        if(tamanoActualBanderaCATEGORIACLASIFICACION == tamanoFinalBanderaCATEGORIACLASIFICACION) {\n            tamanoActualBanderaCamposReglasCategoriaClasificacionCampos = 0, tamanoFinalBanderaCamposReglasCategoriaClasificacionCampos = 0;\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                if(arregloReglasTipoCreditos[i] != undefined) {\n                    for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                        tamanoFinalBanderaCamposReglasCategoriaClasificacionCampos++;\n                    };\n                }\n            };\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                if(arregloReglasTipoCreditos[i] != undefined) {\n                    for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                        this.fetchDataCamposReglasCategoriaClasificacionCampos(arregloReglasTipoCreditos[i][j], arregloReglasTipoCreditos, i, j, arregloTipoCreditos);\n                    };\n                }\n            };\n        }\n    }\n\n    fetchDataCamposReglasCategoriaClasificacionCampos (regla, arregloReglasTipoCreditos, i, j, arregloTipoCreditos) {\n        if(regla.campoCampoID != -1) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select * from Campos where ID = \"+regla.campoCampoID, (err, result) => {\n                    if (err) {\n                        if (!rolledBack) {\n                            console.log(err);\n                            //banderaGuardarResultadosTamActual++;\n                            this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false);\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            tamanoActualBanderaCamposReglasCategoriaClasificacionCampos++;\n                            arregloReglasTipoCreditos[i][j].campoValor = result.recordset[0];\n                            this.verificarValoresReglasCategoriaClasificacionCampos(arregloTipoCreditos, arregloReglasTipoCreditos);\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else if(regla.campoCampoID == -1) {\n            tamanoActualBanderaCamposReglasCategoriaClasificacionCampos++;\n            arregloReglasTipoCreditos[i][j].campoValor = {nombre: \"diasMora\", tabla: \"Préstamo\"};\n            this.verificarValoresReglasCategoriaClasificacionCampos(arregloTipoCreditos, arregloReglasTipoCreditos);\n        }\n    }\n\n    verificarValoresReglasCategoriaClasificacionCampos (arregloTipoCreditos, arregloReglasTipoCreditos) {\n        if(tamanoActualBanderaCamposReglasCategoriaClasificacionCampos == tamanoFinalBanderaCamposReglasCategoriaClasificacionCampos) {\n            tamanoActualBanderaValoresReglasCategoriaClasificacionCampos = 0, tamanoFinalBanderaValoresReglasCategoriaClasificacionCampos = 0;\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                    var idsValores = arregloReglasTipoCreditos[i][j].valor.split(\",\");\n                    for (var k = 0; k < idsValores.length; k++) {\n                        tamanoFinalBanderaValoresReglasCategoriaClasificacionCampos++;\n                    };\n                };\n            };\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                    var idsValores = arregloReglasTipoCreditos[i][j].valor.split(\",\");\n                    for (var k = 0; k < idsValores.length; k++) {\n                        banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION++;\n                        this.fetchDataValoresReglasCategoriaClasificacionCampos(idsValores[k], arregloReglasTipoCreditos[i][j].esListaValor, arregloReglasTipoCreditos, i, j, arregloTipoCreditos);\n                    };\n                };\n            };\n        }\n    }\n\n    fetchDataValoresReglasCategoriaClasificacionCampos (id, esLista, arregloReglasTipoCreditos, i, j, arregloTipoCreditos) {\n        var tabla;\n        if(esLista)\n            tabla = 'VariablesdeLista';\n        else\n            tabla = 'Campos';\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from \"+tabla+\" where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        //banderaGuardarResultadosTamActual++;\n                        this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        tamanoActualBanderaValoresReglasCategoriaClasificacionCampos++;\n                        if(arregloReglasTipoCreditos[i][j].valorValores == undefined)\n                            arregloReglasTipoCreditos[i][j].valorValores = [];\n                        arregloReglasTipoCreditos[i][j].valorValores.push(result.recordset[0]);\n                        guardarCategoriaClasificacion = true;\n                        this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, true);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verifyClasificationCategoryFinal (arregloTipoCreditos, arregloReglasTipoCreditos, iniciarProceso) {\n        banderaGuardarResultadosTamActualCATEGORIACLASIFICACION++;\n        if(banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION == 0)\n            banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION++;\n        if(tamanoActualBanderaValoresReglasCategoriaClasificacionCampos == tamanoFinalBanderaValoresReglasCategoriaClasificacionCampos) {\n            console.log(arregloTipoCreditos);\n            console.log(arregloReglasTipoCreditos);\n            //myWorker.postMessage([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            if(iniciarProceso)\n                constructor([\"categoriasClasificacion\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            //this.checkFinishMethods();\n            if(banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION == banderaGuardarResultadosTamActualCATEGORIACLASIFICACION) {\n                this.iniciarCriteriosDeterioro();\n            }\n            /*var self = this;\n            setTimeout(function(){\n                self.iniciarCriteriosDeterioro();\n            }, 3000);*/\n        }\n    }\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CATEGORIAS CLASIFICACION\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CRITERIOS DE DETERIORO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    /*iniciarCriteriosDeterioro () {\n        //como no tiene id prestamo o cliente, no se puede calcular comportamiento plan pago, agregar mensaje bitacora  // si verificarComportamientoPago == false\n        if( tamanoActualBandera == tamanoFinalBandera ) {\n            banderaGuardarResultadosTamActual = 0;\n            banderaGuardarResultadosTamFinal = this.state.tablasOrginales.length;\n            for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n                var calcularComportamientoPago = false;\n                var primeraVezEntra = true; //agregar valores de tabla a arreglo global de clientes, prestamos y pagos en ClasificarCartera.js\n\n                //como no tiene id prestamo o cliente, no se puede calcular comportamiento plan pago, agregar mensaje bitacora  // si verificarComportamientoPago == false\n\n                if(verificarComportamientoPago && $(\"#ComportamientoPago\"+i).prop('checked') == true)\n                    calcularComportamientoPago = true;\n\n                //if(calcularComportamientoPago) {\n                    this.fetchDataComportamientoPago(this.state.tablasOrginales[i].ID);\n                    //banderaGuardarResultadosTamFinal++;\n                    /*if(primeraVezEntra) {\n                        primeraVezEntra = false;\n                    }\n                }\n                if(verificarTipoCredito) {\n                    //this.fetchDataTipoCredito(this.state.tablasOrginales[i].ID);\n                    //banderaGuardarResultadosTamFinal++;\n                //}\n            };\n        }\n    }*/\n\n    iniciarCriteriosDeterioro () {\n        this.getCriterioDeterioro();\n        guardarCriterioDeterioro = true;\n    }\n\n    getCriterioDeterioro() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from CriterioDeterioro\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        //banderaGuardarResultadosTamActual++;\n                        this.verifyDeteriorationCriteriaFinal(null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.verifyDeteriorationCriteriaFinal(result.recordset, true);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verifyDeteriorationCriteriaFinal (criteriosDeterioro, calcular) {\n        /*banderaGuardarResultadosTamActualCATEGORIACLASIFICACION++;\n        if(tamanoActualBanderaValoresReglasCategoriaClasificacionCampos == tamanoFinalBanderaValoresReglasCategoriaClasificacionCampos) {\n            console.log(arregloTipoCreditos);\n            console.log(arregloReglasTipoCreditos);\n            //myWorker.postMessage([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            if(iniciarProceso)\n                constructor([\"categoriasClasificacion\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            //this.checkFinishMethods();\n            if(banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION == banderaGuardarResultadosTamActualCATEGORIACLASIFICACION) {\n                this.iniciarCategoriasClasificacion();\n            }\n        }*/\n        if(calcular)\n            constructor([\"estimacionDeterioro\", criteriosDeterioro]);\n        this.checkFinishMethods();\n    }\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CRITERIOS DE DETERIORO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n                        GUARDAR RESULTADOS\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    checkFinishMethods() {\n        /*console.log(\"banderaGuardarResultadosTamActual = \"+banderaGuardarResultadosTamActual);\n        console.log(\"banderaGuardarResultadosTamFinal = \"+banderaGuardarResultadosTamFinal);\n        if( banderaGuardarResultadosTamActual == banderaGuardarResultadosTamFinal ) {\n            console.log(\"FIN DE CALCULOS\");\n            console.log(\"GUARDANDO CAMPOS\");\n            for (var i = 0; i < arregloCamposTablasSeleccionadas.length; i++) {\n                console.log(arregloCamposTablasSeleccionadas[i]);\n            };\n        }*/\n        alert(\"Clasificacion realizada con exito\");\n        this.getFieldsToSave();\n    }\n\n    getFieldsToSave() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where guardar = 'true' and (tabla = 'Cliente' or tabla = 'Préstamo')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.startSavingObjects(result.recordset);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    startSavingObjects(arregloDeCamposAGuardar) {\n        //arreglos de archivo de calculos\n        var camposDeCliente = arregloDeCamposAGuardar.filter(function( object ) {\n                                return object.tabla.localeCompare(\"Cliente\") == 0;\n                            });\n        var camposDePrestamo = arregloDeCamposAGuardar.filter(function( object ) {\n                                return object.tabla.localeCompare(\"Préstamo\") == 0;\n                            });\n        var clientes = retornarClientes();\n        var prestamos = retornarPrestamos();\n        for (var i = 0; i < clientes.length; i++) {\n            var identificadorCliente;\n            for (var j = 0; j < camposDeCliente.length; j++) {\n                if(camposDeCliente[j].funcion.localeCompare(\"Identificador\") == 0) {\n                    identificadorCliente = clientes[i][camposDeCliente[j].nombre];\n                    var objeto = \"Cliente\";\n                    var nombre = camposDeCliente[j].nombre;\n                    this.saveObjectID(identificadorCliente, objeto, nombre, \"-1\");\n                    break;\n                }\n            };\n            if(identificadorCliente != undefined) {\n                for (var j = 0; j < camposDeCliente.length; j++) {\n                    if(camposDeCliente[j].funcion.localeCompare(\"Identificador\") != 0) {\n                        var objeto = \"Cliente\";\n                        var nombre = camposDeCliente[j].nombre;\n                        var fecha = new Date();\n                        var nombreTablaOrigenTipo = \"Usuario\";\n                        //verificar si campo es valores de mora, categoria clas, tipo credito o criterio dete\n                        //if()\n                        var valor = clientes[i][camposDeCliente[j].nombre];\n                        if(camposDeCliente[j].tipo.localeCompare(\"int\") == 0) {\n                            this.saveObjectIntField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"decimal\") == 0) {\n                            this.saveObjectDecimalField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"date\") == 0) {\n                            this.saveObjectDateField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"bool\") == 0) {\n                            this.saveObjecBoolField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"varchar\") == 0) {\n                            this.saveObjectStringField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        }\n                    }\n                };\n\n                for (var k = 0; k < prestamos[i].length; k++) {\n                    var identificadorPrestamo;\n                    for (var j = 0; j < camposDePrestamo.length; j++) {\n                        if(camposDePrestamo[j].funcion.localeCompare(\"Identificador\") == 0) {\n                            identificadorPrestamo = prestamos[i][k][camposDePrestamo[j].nombre];\n                            var objeto = \"Préstamo\";\n                            var nombre = camposDePrestamo[j].nombre;\n                            this.saveObjectID(identificadorPrestamo, objeto, nombre, identificadorCliente);\n                            break;\n                        }\n                    };\n                    if(identificadorPrestamo != undefined) {\n                        for (var j = 0; j < camposDePrestamo.length; j++) {\n                            if(camposDePrestamo[j].funcion.localeCompare(\"Identificador\") != 0) {\n                                var objeto = \"Préstamo\";\n                                var nombre = camposDePrestamo[j].nombre;\n                                var fecha = new Date();\n                                var nombreTablaOrigenTipo = \"Usuario\";\n                                //verificar si campo es valores de mora, categoria clas, tipo credito o criterio dete\n                                //if()\n                                var valor = prestamos[i][k][camposDePrestamo[j].nombre];\n                                if(camposDePrestamo[j].tipo.localeCompare(\"int\") == 0) {\n                                    this.saveObjectIntField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"decimal\") == 0) {\n                                    this.saveObjectDecimalField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"date\") == 0) {\n                                    this.saveObjectDateField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"bool\") == 0) {\n                                    this.saveObjecBoolField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"varchar\") == 0) {\n                                    this.saveObjectStringField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                }\n                            }\n                        };\n                        if(guardarTipoCredito) {\n                            var objeto = \"Préstamo\";\n                            var nombre = \"tipoCredito\";\n                            var fecha = new Date();\n                            var nombreTablaOrigenTipo = \"Usuario\";\n                            var valor = prestamos[i][k].tipoCredito;\n                            this.saveObjectStringField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        }\n                        if(guardarCategoriaClasificacion) {\n                            var objeto = \"Préstamo\";\n                            var nombre = \"categoriaClasificacion\";\n                            var fecha = new Date();\n                            var nombreTablaOrigenTipo = \"Usuario\";\n                            var valor = prestamos[i][k].categoriaClasificacion;\n                            this.saveObjectStringField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        }\n                        if(guardarMora) {\n                            var objeto = \"Préstamo\";\n                            var nombreMesPlan = \"mesDelPlan\";\n                            var fecha = new Date();\n                            var nombreTablaOrigenTipo = \"Usuario\";\n                            var valorMesPlan = this.formatDateCreation(prestamos[i][k].mesDelPlan);\n                            this.saveObjectDateField(identificadorPrestamo, objeto, nombreMesPlan, fecha, nombreTablaOrigenTipo, valorMesPlan);\n\n                            var nombreDiasMora = \"diasMora\";\n                            var valorDiasMora = prestamos[i][k].diasMora;\n                            this.saveObjectIntField(identificadorPrestamo, objeto, nombreDiasMora, fecha, nombreTablaOrigenTipo, valorDiasMora);\n\n                            var nombreCapitalPagado = \"totalCapitalPagado\";\n                            var valorCapitalPagado = prestamos[i][k].t0talC4pitalPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreCapitalPagado, fecha, nombreTablaOrigenTipo, valorCapitalPagado);\n\n                            var nombreCapitalDeberiaPagado = \"totalCapitalDeberiaPagado\";\n                            var valorCapitalDeberiaPagado = prestamos[i][k].t0talC4pitalD3beriaPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreCapitalDeberiaPagado, fecha, nombreTablaOrigenTipo, valorCapitalDeberiaPagado);\n\n                            var nombreImpuestosPagado = \"totalImpuestosPagado\";\n                            var valorImpuestosPagado = prestamos[i][k].t0tal1mpu3stosPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreImpuestosPagado, fecha, nombreTablaOrigenTipo, valorImpuestosPagado);\n\n                            var nombreImpuestosDeberiaPagado = \"totalImpuestosDeberiaPagado\";\n                            var valorImpuestosDeberiaPagado = prestamos[i][k].t0tal1mpu3stosD3beriaPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreImpuestosDeberiaPagado, fecha, nombreTablaOrigenTipo, valorImpuestosDeberiaPagado);\n                        }\n                        if(guardarCriterioDeterioro) {\n                            //\n                        }\n                    }\n                };\n                if(guardarMora) {\n                    var objeto = \"Préstamo\";\n                    var fecha = new Date();\n                    var nombreTablaOrigenTipo = \"Usuario\";\n\n                    var nombreCapitalPagado = \"totalCapitalPagado\";\n                    var valorCapitalPagado = clientes[i].t0talC4pitalPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreCapitalPagado, fecha, nombreTablaOrigenTipo, valorCapitalPagado);\n\n                    var nombreCapitalDeberiaPagado = \"totalCapitalDeberiaPagado\";\n                    var valorCapitalDeberiaPagado = clientes[i].t0talC4pitalD3beriaPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreCapitalDeberiaPagado, fecha, nombreTablaOrigenTipo, valorCapitalDeberiaPagado);\n\n                    var nombreImpuestosPagado = \"totalImpuestosPagado\";\n                    var valorImpuestosPagado = clientes[i].t0tal1mpu3stosPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreImpuestosPagado, fecha, nombreTablaOrigenTipo, valorImpuestosPagado);\n\n                    var nombreImpuestosDeberiaPagado = \"totalImpuestosDeberiaPagado\";\n                    var valorImpuestosDeberiaPagado = clientes[i].t0tal1mpu3stosD3beriaPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreImpuestosDeberiaPagado, fecha, nombreTablaOrigenTipo, valorImpuestosDeberiaPagado);\n                }\n            }\n        };\n        console.log(\"FIIIIIIIN\");\n        console.log(clientes);\n        console.log(prestamos);\n        /*var prestamos =  constructor([\"traerArrPrestamos\"]);\n        var pagos =  constructor([\"traerArrPagos\"]);\n        var planpagos =  constructor([\"traerArrPlanPagos\"]);*/\n    }\n\n    saveObjectID(identificador, objeto, nombre, idPadre) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosID (identificador, objeto, nombre, idPadre) values ('\"+identificador+\"','\"+objeto+\"','\"+nombre+\"','\"+idPadre+\"')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectIntField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosInt (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(new Date)+\"','\"+nombreTablaOrigenTipo+\"',\"+valor+\")\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectDecimalField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosDecimal (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(new Date)+\"','\"+nombreTablaOrigenTipo+\"',\"+valor+\")\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectDateField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosDate (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(new Date)+\"','\"+nombreTablaOrigenTipo+\"','\"+valor+\"')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjecBoolField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosBool (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(new Date)+\"','\"+nombreTablaOrigenTipo+\"',\"+valor+\")\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectStringField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosString (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(new Date)+\"','\"+nombreTablaOrigenTipo+\"','\"+valor+\"')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    iterateProperties (arreglo) {\n        for (var i = 0; i < arreglo.length; i++) {\n            var identificadorCampoNombre;\n            Object.keys(arreglo[i]).forEach(function(key,index) {\n                // key: the name of the object key\n                // index: the ordinal position of the key within the object\n                identificadorCampoNombre = camposGuardar.filter(function( object ) {\n                                return object.nombre.localeCompare(key) == 0 && object.funcion.localeCompare(\"Identificador\") == 0;\n                            });\n            });\n            if(identificadorCampoNombre.length > 0) {\n                Object.keys(arreglo[i]).forEach(function(key,index) {\n                    // key: the name of the object key\n                    // index: the ordinal position of the key within the object\n                    console.log(\"key\");\n                    console.log(key);\n                    console.log(\"arreglo[i]\");\n                    console.log(arreglo[i]);\n                    console.log(\"arreglo[i][key]\");\n                    console.log(arreglo[i][key]);\n                    if(identificadorCampoNombre[0].funcion.localeCompare(\"Identificador\") == 0) {\n                        this.verifyResultID(identificadorCampoNombre[0].nombre, identificadorCampoNombre[0].tabla, key);\n                    } else {\n                        this.verifyResultField(identificadorCampoNombre[0].nombre, identificadorCampoNombre[0].tabla, key, arreglo[i][key]);\n                    }\n                });\n            } else {\n                //bitacora no existe campo id\n            }\n        };\n    }\n\n    formatDateCreation(date) {\n        //formato si es STRING\n        //aaaa/mm/dd\n        //aaaa-mm-dd\n        var monthNames = [\n            \"Ene\", \"Feb\", \"Mar\",\n            \"Abr\", \"May\", \"Jun\", \"Jul\",\n            \"Ago\", \"Sep\", \"Oct\",\n            \"Nov\", \"Dec\"\n        ];\n\n        var day = date.getDate();\n        var monthIndex = date.getMonth();\n        monthIndex++;\n        var year = date.getFullYear();\n        return year + '-' + monthIndex + '-' + day;\n    }\n\n    render() {\n        return (\n            <div style={{height: \"85vh\", width: \"100%\"}}>\n                <div style={{width: \"100%\", height: \"7%\"}}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"100%\", height: \"100%\"}}>\n                        <h2>Seleccione Tablas a Clasificar</h2>\n                    </div>\n                </div>\n                <div style={{width: \"100%\", height: \"11%\"}}>\n                    <SeleccionarTablaClasificarCarteraProceso tablasOrginales={this.state.tablasOrginales} tablasSeleccionadas={this.state.tablasSeleccionadas} selectTable={this.selectTable}> </SeleccionarTablaClasificarCarteraProceso>\n                </div>\n                <div style={{width: \"100%\", height: \"76%\"}}>\n                    <div style={{height: \"100%\", overflowX: \"scroll\", overflowY: \"hidden\", whiteSpace: \"nowrap\", borderRadius: \"5px\", padding: \"1% 0%\", border: \"solid 3px #cfd8dc\", borderRadius: \"5px\", marginTop: \"2%\"}}>\n                        <div style={{height: \"100%\", width: \"100%\", display: \"inline-block\", position: \"relative\"}}>\n                            <div style={{height: \"95%\", width: \"95%\", backgroundColor: \"white\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", borderRadius: \"5px\", overflowY: \"scroll\"}}>\n                                <div className={\"text-center\"} style={{borderBottom: \"solid 4px #cfd8dc\"}}>\n                                    <h3>Criterios de Clasificaci&oacute;n</h3>\n                                </div>\n                                <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"solid 3px #eceff1\"}}>\n                                    <div style={{width: \"90%\", height: \"60%\", textAlign: \"center\", display: \"table\"}}>\n                                        <h5 style={{display: \"table-cell\", verticalAlign: \"middle\"}}>Comportamiento de Pago</h5>\n                                    </div>\n                                </div>\n                                <div style={{width: \"100%\", height: \"25%\", overflowY: \"scroll\"}}>\n                                </div>\n\n                                <div className={\"text-center\"} style={{borderBottom: \"solid 4px #cfd8dc\", borderTop: \"solid 4px #cfd8dc\"}}>\n                                    <h3>Tipo de Cr&eacute;dito</h3>\n                                </div>\n                                <div style={{width: \"100%\", height: \"25%\", overflowY: \"scroll\"}}>\n                                </div>\n\n                                <div className={\"text-center\"} style={{borderBottom: \"solid 4px #cfd8dc\", borderTop: \"solid 4px #cfd8dc\"}}>\n                                    <h3>Categorias de Clasificaci&oacute;n</h3>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{width: \"100%\", height: \"6%\", padding: \"1% 0%\"}} className={\"text-center\"}>\n                    <a onClick={this.verificarSeleccionoTablas} className={\"btn btn-primary col-xs-6 col-6\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\"}}>Iniciar </a>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"ClasificarCarteraProceso.js"}