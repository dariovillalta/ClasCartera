{"version":3,"sources":["components/Reporteria/ResultadoReporteria.js"],"names":["campos","nombre","funciones","funcion","texto","ConfiguracionTablas","props","state","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","indiceY","setState","localeCompare","copiaID","deleteTable","deleteField","updateField","self","setTimeout","retornoSeleccionFiltro","width","margin","fontFamily","color","display","dismissMessageModal","confirmMessageModal","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport Accordion from '../Accordion/Accordion.js';\nimport InlineEdit from '../InlineEdit.js';\nimport ErrorMessage from '../ErrorMessage.js';\nimport MessageModal from '../MessageModal.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nlet funciones = [ {funcion: \"idCliente\", texto: \"ID de Cliente\"}, {funcion: \"fecha\", texto: \"fecha\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\n\nexport default class ConfiguracionTablas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        }\n        //this.loadTables = this.loadTables.bind(this);\n    }\n\n    componentDidMount() {\n        //this.loadTables();\n    }\n\n    /*======_______====== ======_______======   MENSAJES MODAL    ======_______====== ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______====== ======_______====== ==_____==  ==___==  ======_______====== ======_______======*/\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        });\n    }\n\n    confirmMessageModal() {\n        if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelTable\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteTable(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteField(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goUpdField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.updateField(copiaID, this.state.mensajeModal.indiceX, this.state.mensajeModal.indiceY);\n        }\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje, banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX, indiceY: self.state.mensajeModal.indiceY}\n            });\n        }, 850);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Ver Reporteria</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.retornoSeleccionFiltro}><a href=\"#\" className={\"breadcrumb-link\"}>Selección de Filtro</a></li>\n                                        <li className={\"breadcrumb-item active\"} aria-current=\"page\">Resultado</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\"}}>\n                            <Accordion key={\"0\"} showTrash={true} allowMultipleOpen>\n                                <div className={\"border-top\"}>\n\n                                    <div className={\"border-top alert alert-primary\"} style={{margin: \"3% 0%\"}}>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                                <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\"}} className={\"alert-heading\"} >TEST</h4>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Nombre de Campo</h4>\n                                                <input id={\"campoNombre\"} type=\"text\" className={\"form-control\"}/>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tipo</h4>\n                                                <select id={\"campoTipo\"} className={\"form-control\"}>\n                                                    <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                </select>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                                <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                                    <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"} id={\"campoGuardar\"}/><span>\n                                                    <label htmlFor={\"campoGuardar\"}></label></span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"}>\n                                            <button className={\"btn btn-light btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion>\n                    </div>\n                </div>\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }\n\n    /*render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.showConfigurationComponent}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item active\"} aria-current=\"page\">Tablas</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\"}}>\n                        {this.state.tablas.map((tabla, i) => (\n                            <Accordion key={tabla.ID} showTrash={true} deleteVariable={() => this.deleteTableConfirmation(tabla.ID, i)} allowMultipleOpen>\n                                <div label={tabla.nombre} className={\"border-top\"}>\n\n                                    { this.state.camposTablas[i] != undefined ? (\n                                        <div>\n                                            {this.state.camposTablas[i].map((campo, j) => (\n                                                <div key={campo.ID} className={\"border-top alert alert-primary\"} style={{padding: \"1% 3%\"}}>\n                                                    <div className={\"row\"}>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                                            <select id={\"campoTablaID\"+i+j} className={\"form-control\"} defaultValue={campo.tablaID}>\n                                                                <option value=\"\" key=\"0\">Seleccione una tabla...</option>\n                                                                {this.state.tablas.map((tabla, k) =>\n                                                                    <option value={tabla.ID} key={tabla.ID}>{tabla.nombre}</option>\n                                                                )}\n                                                            </select>\n                                                        </div>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Nombre de Campo</h4>\n                                                            <InlineEdit id={\"campoNombre\"+i+j} texto={campo.nombre}> </InlineEdit>\n                                                        </div>\n                                                    </div>\n                                                    <div className={\"row\"}>\n                                                        <div className=\"form-group col-xl-6 col-6\">\n                                                            <h4 className={\"col-form-label text-center\"}>Tipo</h4>\n                                                            <select id={\"campoTipo\"+i+j} className={\"form-control\"} defaultValue={campo.tipo}>\n                                                                <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                                {campos.map((campoSelect, k) =>\n                                                                    <option value={campoSelect.nombre} key={k}>{campoSelect.nombre}</option>\n                                                                )}\n                                                            </select>\n                                                        </div>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                                            <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                                                { campo.guardar ? (\n                                                                    <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"+i+j} id={\"campoGuardar\"+i+j}/>\n                                                                ) : (\n                                                                    <input type=\"checkbox\" name={\"campoGuardar\"+i+j} id={\"campoGuardar\"+i+j}/>\n                                                                )}\n                                                                <span><label htmlFor={\"campoGuardar\"+i+j}></label></span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    { this.state.errorModificarCampo.mostrar ? (\n                                                        <ErrorMessage campo={this.state.errorModificarCampo.campo} descripcion={this.state.errorModificarCampo.descripcion} dismissTableError={this.dismissFieldEditError}> </ErrorMessage>\n                                                    ) : (\n                                                        <span></span>\n                                                    )}\n                                                    <div className={\"row\"}>\n                                                        <button onClick={() => this.updateFieldsConfirmation(campo.ID, i, j)} className={\"btn btn-light btn-block col-xl-5 col-5\"} style={{margin: \"0 auto\", display: \"block\"}}>Guardar</button>\n                                                        <button onClick={() => this.deleteFieldsConfirmation(campo.ID, i, j)} className={\"btn btn-light btn-block col-xl-1 col-1\"} style={{margin: \"0 auto\", display: \"block\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}><img onClick={this.props.deleteVariable} src={\"../assets/trash.png\"} style={{height: \"20px\", width: \"20px\"}}></img></button>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <span></span>\n                                    )}  \n\n                                    <div className={\"border-top alert alert-primary\"} style={{margin: \"3% 0%\"}}>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                                <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\"}} className={\"alert-heading\"} >{tabla.nombre}</h4>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Nombre de Campo</h4>\n                                                <input id={\"campoNombre\"+i} type=\"text\" className={\"form-control\"}/>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tipo</h4>\n                                                <select id={\"campoTipo\"+i} className={\"form-control\"}>\n                                                    <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                    {campos.map((campo, k) =>\n                                                        <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                                    )}\n                                                </select>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                                <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                                    <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"+i} id={\"campoGuardar\"+i}/><span>\n                                                    <label htmlFor={\"campoGuardar\"+i}></label></span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        { this.state.errorCreacionCampo.mostrar ? (\n                                            <ErrorMessage campo={this.state.errorCreacionCampo.campo} descripcion={this.state.errorCreacionCampo.descripcion} dismissTableError={this.dismissFieldNewError}> </ErrorMessage>\n                                        ) : (\n                                            <span></span>\n                                        )}\n                                        <div className={\"row\"}>\n                                            <button onClick={() => this.insertField(i)} className={\"btn btn-light btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <h3>Crear Nueva Tabla</h3>\n                                <div className={\"row border-top\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Conecci&oacute;n</label>\n                                        <input id=\"nombreTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Usuario de la Tabla</label>\n                                        <input id=\"usuarioTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Contrase&ntilde;a de la Tabla</label>\n                                        <input id=\"contrasenaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Servidor de la Tabla</label>\n                                        <input id=\"servidorTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Base de Datos de la Tabla</label>\n                                        <input id=\"basedatosTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Tabla</label>\n                                        <input id=\"tablaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                { this.state.errorCreacionTabla.mostrar ? (\n                                    <ErrorMessage campo={this.state.errorCreacionTabla.campo} descripcion={this.state.errorCreacionTabla.descripcion} dismissTableError={this.dismissTableNewError}> </ErrorMessage>\n                                ) : (\n                                    <span></span>\n                                )}\n                                <div className={\"row\"}>\n                                    <button onClick={this.insertTable} className={\"btn btn-success btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }*/\n}"],"file":"ResultadoReporteria.js"}