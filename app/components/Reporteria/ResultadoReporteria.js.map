{"version":3,"sources":["components/Reporteria/ResultadoReporteria.js"],"names":["campos","nombre","funciones","funcion","texto","tamBanderaActual","tamBanderaFinal","ResultadosReporteria","props","state","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","indiceY","resultadosClientes","resultadosPrestamos","getFiltersString","bind","getFilterQuery","getObjectsID","getObjectsField","binaryInsertClient","binaryInsertCredit","binaryInsertCreditField","verificarFinClientes","resultadoQueryIDs","resultadoQueryInt","resultadoQueryDecimal","resultadoQueryDate","resultadoQueryBool","resultadoQueryString","filtro","queryStringID","queryStringInt","queryStringDecimal","queryStringDate","queryStringBool","queryStringString","esCliente","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","alert","rollback","commit","recordset","length","i","identificador","idObjeto","transaction1","request1","transaction2","request2","transaction4","request4","transaction5","request5","newValue","array","field","fieldsToSave","startVal","endVal","start","end","m","Math","floor","newObject","ID","valor","prestamos","push","setState","localeCompare","splice","fieldClient","fieldCreditOwner","fieldCredit","undefined","newObjectCredito","prestamo","newArray","j","copiaID","deleteTable","deleteField","updateField","self","setTimeout","retornoSeleccionFiltro","width","map","cliente","margin","nombreCliente","Object","keys","propiedad","k","display","padding","dismissMessageModal","confirmMessageModal","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport Accordion from '../Accordion/Accordion.js';\nimport InlineEdit from '../InlineEdit.js';\nimport ErrorMessage from '../ErrorMessage.js';\nimport MessageModal from '../MessageModal.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nlet funciones = [ {funcion: \"idCliente\", texto: \"ID de Cliente\"}, {funcion: \"fecha\", texto: \"fecha\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\n\nvar tamBanderaActual = 0, tamBanderaFinal = 0;\n\nexport default class ResultadosReporteria extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1},\n            resultadosClientes: [],\n            resultadosPrestamos: []\n        }\n        //this.loadTables = this.loadTables.bind(this);\n        this.getFiltersString = this.getFiltersString.bind(this);\n        this.getFilterQuery = this.getFilterQuery.bind(this);\n        this.getObjectsID = this.getObjectsID.bind(this);\n        this.getObjectsField = this.getObjectsField.bind(this);\n        this.binaryInsertClient = this.binaryInsertClient.bind(this);\n        this.binaryInsertCredit = this.binaryInsertCredit.bind(this);\n        this.binaryInsertCreditField = this.binaryInsertCreditField.bind(this);\n        this.verificarFinClientes = this.verificarFinClientes.bind(this);\n    }\n\n    componentDidMount() {\n        this.getFiltersString();\n    }\n\n    getFiltersString () {\n        var resultadoQueryIDs = '';\n        /*for (var i = 0; i < this.props.arregloDeFiltros.length; i++) {\n            resultadoQueryIDs += this.getFilterQuery(this.props.arregloDeFiltrosIDs[i]);\n        };*/\n        var resultadoQueryInt = '';\n        /*for (var i = 0; i < this.props.arregloDeFiltros.length; i++) {\n            resultadoQueryInt += this.getFilterQuery(this.props.arregloDeFiltrosInt[i]);\n        };*/\n        var resultadoQueryDecimal = '';\n        /*for (var i = 0; i < this.props.arregloDeFiltros.length; i++) {\n            resultadoQueryDecimal += this.getFilterQuery(this.props.arregloDeFiltrosDecimal[i]);\n        };*/\n        var resultadoQueryDate = '';\n        /*for (var i = 0; i < this.props.arregloDeFiltros.length; i++) {\n            resultadoQueryDate += this.getFilterQuery(this.props.arregloDeFiltrosDate[i]);\n        };*/\n        var resultadoQueryBool = '';\n        /*for (var i = 0; i < this.props.arregloDeFiltros.length; i++) {\n            resultadoQueryBool += this.getFilterQuery(this.props.arregloDeFiltrosBool[i]);\n        };*/\n        var resultadoQueryString = '';\n        /*for (var i = 0; i < this.props.arregloDeFiltros.length; i++) {\n            resultadoQueryString += this.getFilterQuery(this.props.arregloDeFiltrosString[i]);\n        };*/\n        this.getObjectsID(\" where idPadre = '-1'\"+resultadoQueryIDs, resultadoQueryInt, resultadoQueryDecimal, resultadoQueryDate, resultadoQueryBool, resultadoQueryString, true);\n        //this.getObjectsID(\" where idPadre != '-1'\"+resultadoQueryIDs, resultadoQueryInt, resultadoQueryDecimal, resultadoQueryDate, resultadoQueryBool, resultadoQueryString, false);\n        /*var self = this;\n        setTimeout(function(){\n            self.getObjectsID(\" where idPadre != '-1'\"+resultadoQueryIDs, resultadoQueryInt, resultadoQueryDecimal, resultadoQueryDate, resultadoQueryBool, resultadoQueryString, false);\n        }, 2000);*/\n    }\n\n    getFilterQuery(filtro) {\n        //if (filtro.)\n    }\n\n    getObjectsID(queryStringID, queryStringInt, queryStringDecimal, queryStringDate, queryStringBool, queryStringString, esCliente) {\n        //traer id de resultados de base de datos\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ResultadosID \"+queryStringID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        alert('no se pudo traer datos');\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        //binary insert ID\n                        tamBanderaActual = 0, tamBanderaFinal = result.recordset.length;\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            if(esCliente)\n                                this.binaryInsertClient(result.recordset[i], this.state.resultadosClientes, \"identificador\", []);\n                            else\n                                this.binaryInsertCredit(result.recordset[i], this.state.resultadosPrestamos , \"ID\", \"idPadre\", \"identificador\");\n                            this.getObjectsField(result.recordset[i].identificador, queryStringInt, queryStringDecimal, queryStringDate, queryStringBool, queryStringString, esCliente);\n                            if(esCliente)\n                                this.verificarFinClientes();\n                        };\n                        console.log(\"resultados\");\n                        console.log(this.state.resultadosClientes);\n                        console.log(this.state.resultadosPrestamos);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getObjectsField(idObjeto, queryStringInt, queryStringDecimal, queryStringDate, queryStringBool, queryStringString, esCliente) {\n        tamBanderaActual++;\n        //traer campos de resultados de base de datos\n        const transaction1 = new sql.Transaction( this.props.pool );\n        transaction1.begin(err => {\n            var rolledBack = false;\n            transaction1.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request1 = new sql.Request(transaction1);\n            request1.query(\"select * from ResultadosInt where idObjeto = '\"+idObjeto+\"' \"+queryStringInt, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        alert('no se pudo traer datos');\n                        transaction1.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction1.commit(err => {\n                        //binary insert ID\n                        if(result.recordset.length > 0) {\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                if(esCliente)\n                                    this.binaryInsertClient(result.recordset[i], this.state.resultadosClientes, \"idObjeto\", result.recordset);\n                                else\n                                    this.binaryInsertCreditField(result.recordset[i]);\n                            };\n                        }\n                    });\n                }\n            });\n        }); // fin transaction1\n\n        const transaction2 = new sql.Transaction( this.props.pool );\n        transaction2.begin(err => {\n            var rolledBack = false;\n            transaction2.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request2 = new sql.Request(transaction2);\n            request2.query(\"select * from ResultadosDecimal where idObjeto = '\"+idObjeto+\"' \"+queryStringInt, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        alert('no se pudo traer datos');\n                        transaction2.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction2.commit(err => {\n                        //binary insert ID\n                        if(result.recordset.length > 0) {\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                if(esCliente)\n                                    this.binaryInsertClient(result.recordset[i], this.state.resultadosClientes, \"idObjeto\", result.recordset);\n                                else\n                                    this.binaryInsertCreditField(result.recordset[i]);\n                            };\n                        }\n                    });\n                }\n            });\n        }); // fin transaction2\n\n        /*const transaction3 = new sql.Transaction( this.props.pool );\n        transaction3.begin(err => {\n            var rolledBack = false;\n            transaction3.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request3 = new sql.Request(transaction3);\n            request3.query(\"select * from ResultadosDate where idObjeto = '\"+idObjeto+\"' \"+queryStringInt, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        alert('no se pudo traer datos');\n                        transaction3.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction3.commit(err => {\n                        //binary insert ID\n                        if(result.recordset.length > 0) {\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                if(esCliente)\n                                    this.binaryInsertClient(result.recordset[i], this.state.resultadosClientes, \"idObjeto\", result.recordset);\n                                else\n                                    this.binaryInsertCreditField(result.recordset[i]);\n                            };\n                        }\n                    });\n                }\n            });\n        });*/ // fin transaction3\n\n        const transaction4 = new sql.Transaction( this.props.pool );\n        transaction4.begin(err => {\n            var rolledBack = false;\n            transaction4.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request4 = new sql.Request(transaction4);\n            request4.query(\"select * from ResultadosBool where idObjeto = '\"+idObjeto+\"' \"+queryStringInt, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        alert('no se pudo traer datos');\n                        transaction4.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction4.commit(err => {\n                        //binary insert ID\n                        if(result.recordset.length > 0) {\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                if(esCliente)\n                                    this.binaryInsertClient(result.recordset[i], this.state.resultadosClientes, \"idObjeto\", result.recordset);\n                                else\n                                    this.binaryInsertCreditField(result.recordset[i]);\n                            };\n                        }\n                    });\n                }\n            });\n        }); // fin transaction4\n\n        const transaction5 = new sql.Transaction( this.props.pool );\n        transaction5.begin(err => {\n            var rolledBack = false;\n            transaction5.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request5 = new sql.Request(transaction5);\n            request5.query(\"select * from ResultadosString where idObjeto = '\"+idObjeto+\"' \"+queryStringInt, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        alert('no se pudo traer datos');\n                        transaction5.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction5.commit(err => {\n                        //binary insert ID\n                        if(result.recordset.length > 0) {\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                if(esCliente)\n                                    this.binaryInsertClient(result.recordset[i], this.state.resultadosClientes, \"idObjeto\", result.recordset);\n                                else\n                                    this.binaryInsertCreditField(result.recordset[i]);\n                            };\n                        }\n                    });\n                }\n            });\n        }); // fin transaction5\n    }\n\n    binaryInsertClient(newValue, array, field, fieldsToSave, startVal, endVal){\n        var length = array.length;\n        var start = typeof(startVal) != 'undefined' ? startVal : 0;\n        var end = typeof(endVal) != 'undefined' ? endVal : length - 1;//!! endVal could be 0 don't use || syntax\n        var m = start + Math.floor((end - start)/2);\n        if(length == 0) {\n            var newObject = {ID: newValue[field]};\n            for (var i = 0; i < fieldsToSave.length; i++) {\n                newObject[fieldsToSave[i].nombre] = fieldsToSave[i].valor;\n            };\n            // 1. Make a shallow copy of the items\n            let prestamos = [...this.state.resultadosClientes];\n            // 3. Replace the property you're intested in\n            prestamos.push(newObject);\n            // 5. Set the state to our new copy\n            this.setState({\n                resultadosClientes: prestamos\n            });\n            //array.push(newObject);\n            return;\n        }\n        if( newValue[field].localeCompare(array[m].ID) == 0 ) {\n            for (var i = 0; i < fieldsToSave.length; i++) {\n                array[m][fieldsToSave[i].nombre] = fieldsToSave[i].valor;\n            };\n            return;\n        }\n        if( newValue[field].localeCompare(array[end].ID) > 0 ) {\n            var newObject = {ID: newValue[field]};\n            for (var i = 0; i < fieldsToSave.length; i++) {\n                newObject[fieldsToSave[i].nombre] = fieldsToSave[i].valor;\n            };\n            // 1. Make a shallow copy of the items\n            let prestamos = [...this.state.resultadosClientes];\n            // 3. Replace the property you're intested in\n            prestamos.splice(end + 1, 0, newObject);\n            // 5. Set the state to our new copy\n            this.setState({\n                resultadosClientes: prestamos\n            });\n            //array.splice(end + 1, 0, newObject);\n            return;\n        }\n        if( newValue[field].localeCompare(array[start].ID) < 0 ) {//!!\n            var newObject = {ID: newValue[field]};\n            for (var i = 0; i < fieldsToSave.length; i++) {\n                newObject[fieldsToSave[i].nombre] = fieldsToSave[i].valor;\n            };\n            // 1. Make a shallow copy of the items\n            let prestamos = [...this.state.resultadosClientes];\n            // 3. Replace the property you're intested in\n            prestamos.splice(start, 0, newObject);\n            // 5. Set the state to our new copy\n            this.setState({\n                resultadosClientes: prestamos\n            });\n            //array.splice(start, 0, newObject);\n            return;\n        }\n        if(start >= end){\n            return;\n        }\n        if( newValue[field].localeCompare(array[m].ID) < 0 ){\n            this.binaryInsertClient(newValue, array, field, fieldsToSave, start, m - 1);\n            return;\n        }\n        if( newValue[field].localeCompare(array[m].ID) > 0 ){\n            this.binaryInsertClient(newValue, array, field, fieldsToSave, m + 1, end);\n            return;\n        }\n    }\n\n    binaryInsertCredit(newValue, array, fieldClient, fieldCreditOwner, fieldCredit, startVal, endVal){\n        var length = array.length;\n        var start = typeof(startVal) != 'undefined' ? startVal : 0;\n        var end = typeof(endVal) != 'undefined' ? endVal : length - 1;\n        var m = start + Math.floor((end - start)/2);\n        if(length == 0) {\n            if(this.state.resultadosClientes.length > 0) {\n                if(this.state.resultadosPrestamos[0] == undefined)\n                    this.state.resultadosPrestamos[0] = [];\n                var newObjectCredito = {ID: newValue[fieldCredit]};\n                this.state.resultadosPrestamos[0].push(newObjectCredito);\n            }\n            return;\n        }\n        if( newValue[fieldCreditOwner].localeCompare(this.state.resultadosClientes[m][fieldClient]) == 0 ) {\n            var newObjectCredito = {ID: newValue[fieldCredit]};\n            // 1. Make a shallow copy of the items\n            let prestamos = [...this.state.resultadosPrestamos];\n            // 2. Make a shallow copy of the item you want to mutate\n            let prestamo = [...prestamos[m]];\n            // 3. Replace the property you're intested in\n            prestamo.push(newObjectCredito);\n            // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n            prestamos[m] = prestamo;\n            // 5. Set the state to our new copy\n            this.setState({\n                resultadosPrestamos: prestamos\n            });\n            //this.state.resultadosPrestamos[m].push(newObjectCredito);\n            return;\n        }\n        if( newValue[fieldCreditOwner].localeCompare(this.state.resultadosClientes[end][fieldClient]) > 0) {\n            var newObjectCredito = {ID: newValue[fieldCredit]};\n            var newArray = [newObjectCredito];\n            // 1. Make a shallow copy of the items\n            let prestamos = [...this.state.resultadosPrestamos];\n            // 3. Replace the property you're intested in\n            prestamos.splice(end + 1, 0, newArray);\n            // 5. Set the state to our new copy\n            this.setState({\n                resultadosPrestamos: prestamos\n            });\n            //this.state.resultadosPrestamos.splice(end + 1, 0, newArray);\n            return;\n        }\n        if( newValue[fieldCreditOwner].localeCompare(this.state.resultadosClientes[start][fieldClient]) < 0 ) {\n            var newObjectCredito = {ID: newValue[fieldCredit]};\n            var newArray = [newObjectCredito];\n            // 1. Make a shallow copy of the items\n            let prestamos = [...this.state.resultadosPrestamos];\n            // 3. Replace the property you're intested in\n            prestamos.splice(start, 0, newArray);\n            // 5. Set the state to our new copy\n            this.setState({\n                resultadosPrestamos: prestamos\n            });\n            //this.state.resultadosPrestamos.splice(start, 0, newArray);\n            return;\n        }\n        if(start >= end){\n            return;\n        }\n        if( newValue[fieldCreditOwner].localeCompare(this.state.resultadosClientes[m][fieldClient]) < 0 ) {\n            this.binaryInsertCredit(newValue, array, fieldClient, fieldCreditOwner, fieldCredit, start, m - 1);\n            return;\n        }\n        if( newValue[fieldCreditOwner].localeCompare(this.state.resultadosClientes[m][fieldClient]) > 0 ) {\n            this.binaryInsertCredit(newValue, array, fieldClient, fieldCreditOwner, fieldCredit, m + 1, end);\n            return;\n        }\n    }\n\n    binaryInsertCreditField(newValue){\n        for (var i = 0; i < this.state.resultadosPrestamos.length; i++) {\n            for (var j = 0; j < this.state.resultadosPrestamos[i].length; j++) {\n                if(this.state.resultadosPrestamos[i][j].ID.localeCompare(newValue.idObjeto) == 0) {\n                    //this.state.resultadosPrestamos[i][j][newValue.nombre] = newValue.valor;\n                    // 1. Make a shallow copy of the items\n                    let prestamos = [...this.state.resultadosPrestamos];\n                    // 2. Make a shallow copy of the item you want to mutate\n                    let prestamo = {...prestamos[i][j]};\n                    // 3. Replace the property you're intested in\n                    prestamo[newValue.nombre] = newValue.valor;\n                    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n                    prestamos[i][j] = prestamo;\n                    // 5. Set the state to our new copy\n                    this.setState({\n                        resultadosPrestamos: prestamos\n                    });\n                    return;\n                }\n            };\n        };\n    }\n\n    verificarFinClientes() {\n        console.log(\"tamBanderaActual = \"+tamBanderaActual);\n        console.log(\"tamBanderaFinal = \"+tamBanderaFinal);\n        if(tamBanderaActual == tamBanderaFinal) {\n            console.log(\"ENTROOO\");\n        }\n    }\n\n    /*======_______====== ======_______======   MENSAJES MODAL    ======_______====== ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______====== ======_______====== ==_____==  ==___==  ======_______====== ======_______======*/\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        });\n    }\n\n    confirmMessageModal() {\n        if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelTable\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteTable(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteField(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goUpdField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.updateField(copiaID, this.state.mensajeModal.indiceX, this.state.mensajeModal.indiceY);\n        }\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje, banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX, indiceY: self.state.mensajeModal.indiceY}\n            });\n        }, 850);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Ver Reporteria</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.retornoSeleccionFiltro}><a href=\"#\" className={\"breadcrumb-link\"}>Selección de Filtro</a></li>\n                                        <li className={\"breadcrumb-item active\"} aria-current=\"page\">Resultado</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\"}}>\n                        {this.state.resultadosClientes.map((cliente, i) => (\n                            <div key={cliente.ID} style={{margin: \"3% 0%\"}}>\n                                <Accordion showTrash={false} allowMultipleOpen color={\"#ffffff\"}>\n                                    <div label={cliente.ID + \" | \" + cliente.nombreCliente}>\n\n\n                                        { this.state.resultadosPrestamos[i] != undefined ? (\n                                            <div>\n                                                {this.state.resultadosPrestamos[i].map((prestamo, j) => (\n                                                    <div key={prestamo.ID}>\n                                                        {\n                                                            Object.keys(this.state.resultadosPrestamos[i][j]).map((propiedad, k) => (\n                                                                <div key={k} style={{display: \"inline-block\", padding: \"1% 3%\"}} className={\"border-top border-bottom border-left border-right\"}>\n                                                                    <h4 className={\"col-form-label text-center\"}>{this.state.resultadosPrestamos[i][j][propiedad]}</h4>\n                                                                </div>\n                                                            ))\n                                                        }\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        ) : (\n                                            <span></span>\n                                        )}\n                                    </div>\n                                </Accordion>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }\n\n    /*render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.showConfigurationComponent}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item active\"} aria-current=\"page\">Tablas</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\"}}>\n                        {this.state.tablas.map((tabla, i) => (\n                            <Accordion key={tabla.ID} showTrash={true} deleteVariable={() => this.deleteTableConfirmation(tabla.ID, i)} allowMultipleOpen>\n                                <div label={tabla.nombre} className={\"border-top\"}>\n\n                                    { this.state.camposTablas[i] != undefined ? (\n                                        <div>\n                                            {this.state.camposTablas[i].map((campo, j) => (\n                                                <div key={campo.ID} className={\"border-top alert alert-primary\"} style={{padding: \"1% 3%\"}}>\n                                                    <div className={\"row\"}>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                                            <select id={\"campoTablaID\"+i+j} className={\"form-control\"} defaultValue={campo.tablaID}>\n                                                                <option value=\"\" key=\"0\">Seleccione una tabla...</option>\n                                                                {this.state.tablas.map((tabla, k) =>\n                                                                    <option value={tabla.ID} key={tabla.ID}>{tabla.nombre}</option>\n                                                                )}\n                                                            </select>\n                                                        </div>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Nombre de Campo</h4>\n                                                            <InlineEdit id={\"campoNombre\"+i+j} texto={campo.nombre}> </InlineEdit>\n                                                        </div>\n                                                    </div>\n                                                    <div className={\"row\"}>\n                                                        <div className=\"form-group col-xl-6 col-6\">\n                                                            <h4 className={\"col-form-label text-center\"}>Tipo</h4>\n                                                            <select id={\"campoTipo\"+i+j} className={\"form-control\"} defaultValue={campo.tipo}>\n                                                                <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                                {campos.map((campoSelect, k) =>\n                                                                    <option value={campoSelect.nombre} key={k}>{campoSelect.nombre}</option>\n                                                                )}\n                                                            </select>\n                                                        </div>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                                            <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                                                { campo.guardar ? (\n                                                                    <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"+i+j} id={\"campoGuardar\"+i+j}/>\n                                                                ) : (\n                                                                    <input type=\"checkbox\" name={\"campoGuardar\"+i+j} id={\"campoGuardar\"+i+j}/>\n                                                                )}\n                                                                <span><label htmlFor={\"campoGuardar\"+i+j}></label></span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    { this.state.errorModificarCampo.mostrar ? (\n                                                        <ErrorMessage campo={this.state.errorModificarCampo.campo} descripcion={this.state.errorModificarCampo.descripcion} dismissTableError={this.dismissFieldEditError}> </ErrorMessage>\n                                                    ) : (\n                                                        <span></span>\n                                                    )}\n                                                    <div className={\"row\"}>\n                                                        <button onClick={() => this.updateFieldsConfirmation(campo.ID, i, j)} className={\"btn btn-light btn-block col-xl-5 col-5\"} style={{margin: \"0 auto\", display: \"block\"}}>Guardar</button>\n                                                        <button onClick={() => this.deleteFieldsConfirmation(campo.ID, i, j)} className={\"btn btn-light btn-block col-xl-1 col-1\"} style={{margin: \"0 auto\", display: \"block\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}><img onClick={this.props.deleteVariable} src={\"../assets/trash.png\"} style={{height: \"20px\", width: \"20px\"}}></img></button>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <span></span>\n                                    )}  \n\n                                    <div className={\"border-top alert alert-primary\"} style={{margin: \"3% 0%\"}}>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                                <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\"}} className={\"alert-heading\"} >{tabla.nombre}</h4>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Nombre de Campo</h4>\n                                                <input id={\"campoNombre\"+i} type=\"text\" className={\"form-control\"}/>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tipo</h4>\n                                                <select id={\"campoTipo\"+i} className={\"form-control\"}>\n                                                    <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                    {campos.map((campo, k) =>\n                                                        <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                                    )}\n                                                </select>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                                <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                                    <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"+i} id={\"campoGuardar\"+i}/><span>\n                                                    <label htmlFor={\"campoGuardar\"+i}></label></span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        { this.state.errorCreacionCampo.mostrar ? (\n                                            <ErrorMessage campo={this.state.errorCreacionCampo.campo} descripcion={this.state.errorCreacionCampo.descripcion} dismissTableError={this.dismissFieldNewError}> </ErrorMessage>\n                                        ) : (\n                                            <span></span>\n                                        )}\n                                        <div className={\"row\"}>\n                                            <button onClick={() => this.insertField(i)} className={\"btn btn-light btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <h3>Crear Nueva Tabla</h3>\n                                <div className={\"row border-top\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Conecci&oacute;n</label>\n                                        <input id=\"nombreTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Usuario de la Tabla</label>\n                                        <input id=\"usuarioTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Contrase&ntilde;a de la Tabla</label>\n                                        <input id=\"contrasenaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Servidor de la Tabla</label>\n                                        <input id=\"servidorTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Base de Datos de la Tabla</label>\n                                        <input id=\"basedatosTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Tabla</label>\n                                        <input id=\"tablaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                { this.state.errorCreacionTabla.mostrar ? (\n                                    <ErrorMessage campo={this.state.errorCreacionTabla.campo} descripcion={this.state.errorCreacionTabla.descripcion} dismissTableError={this.dismissTableNewError}> </ErrorMessage>\n                                ) : (\n                                    <span></span>\n                                )}\n                                <div className={\"row\"}>\n                                    <button onClick={this.insertTable} className={\"btn btn-success btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }*/\n}"],"file":"ResultadoReporteria.js"}