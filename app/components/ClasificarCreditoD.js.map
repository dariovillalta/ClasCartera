{"version":3,"sources":["components/ClasificarCreditoD.js"],"names":["constructor","arreglo","localeCompare","crearArregloClientes","crearArregloCreditos","comportamientoPago","console","log","tipoCredito","categoriasClasificacion","estimacionDeterioro","arregloPlanPagos","arregloPagos","arregloCreditos","arregloClientes","ordenarPagos","arregloCreditosTodos","campoFecha","sort","a","b","getTime","campoClienteID","tipoCampoCliente","camposAGuardarCreditosDeTablas","retornarArreglos","i","length","insercionBinariaClientes","postMessage","campoPrestamoID","tipoCampoNumCuenta","insercionBinariaCreditos","crearArregloPagos","insercionBinaria","calcularDiasMora","arregloPrestamos","j","k","clasificarCreditos","Things","retornarClientes","retornarPrestamos","prestamoCampos","valoresPrestamos","planPagoCampos","valoresPlanPago","idClientePrestamoCampoID","filter","object","ID","idClientePlanPagoCampoID","numeroPrestamoCampoID","numeroPlanPagoCampoID","pagoCapitalPrestamoCampoID","pagoCapitalPlanPagoCampoID","pagoImpuestosPrestamoCampoID","pagoImpuestosPlanPagoCampoID","fechaPrestamoCampoID","fechaPlanPagoCampoID","insercionBinariaPagos","nombre","tipo","concat","insercionBinariaPlanPagos","undefined","initEvalcomportamientoPago","capitalPago","capitalPlanPago","impuestoPago","impuestoPlanPago","fechaPago","fechaPlanPago","numPagosAtrasadosCliente","diasMoraCliente","totalCapitalPagado","totalImpuestosPagado","totalCapitalPlanPagos","totalImpuestosPlanPagos","mesViejo","Date","totalCapitalPagadoPrestamo","totalImpuestosPagadoPrestamo","totalCapitalPlanPagoPrestamo","totalImpuestosPlanPagoPrestamo","fechaPactadaPago","banderaVerFechaPactada","arregloPlanPagosDeCredito","getMonth","getDate","index","p","mes","montoCapital","montoImpuesto","push","montoCapitalTotal","montoImpuestoTotal","mesDelPlan","posicionPlan","fechaInicial","fechaAIniciarContar","getFullYear","hoy","momentFechaPlan","diferenciaDias","diff","getPagoAtrasadoFechaPactada","saveClientsDB","valorAGuardar","camposAGuardar","Object","getOwnPropertyNames","esValidoCampo","tiposCreditos","reglasTiposCreditos","n","contadorCumpleParametros","m","objeto","campoValor","tabla","condicionRegla","getEvalCodeCondition","eval","tipoCreditoID","categoriaClasificacion","categoriaClasificacionID","estimacionesDeterioro","categoriaEstimacionDeterioro","categoriaClasPadre","tipoDeCredito","inicioMora","diasMora","finMora","t0talC4pitalPagado","categoria","getWindowsCodeFromRules","arregloReglas","nombreFunRet","nombreArreglo","codigoRegla","getEvalCode","regla","codigo","codigoCampo","valores","valorValores","operacion","campoTipo","valor","campo","tipoCampo","startVal","endVal","start","end","Math","floor","esString","esInt","esDec","newObject","valorAInsertar","validarVariable","splice","campoCliente","campoNumCuenta","camposAGuardarDeCreditosCreditosDeTablas","esStringCampoCliente","esIntCampoCliente","esDecCampoCliente","esStringCampoNumCuenta","esIntCampoNumCuenta","esDecCampoNumCuenta","newObjectCredito","existeCredito","newArray","camposAGuardarDeClientesCreditosDeTablas","camposAGuardarDePagosCreditosDeTablas","newObjectPago","newArrayPagos"],"mappings":"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","sourcesContent":["//importScripts('./libs/moment/min/moment.min.js');\nimport moment from \"../libs/moment/min/moment.min.js\";\n\nexport function constructor (arreglo) {\n\t//e.data[1] = props\n\t//e.data[2] = arreglo\n\tif(arreglo[0].localeCompare(\"iniciarArregloClientes\") == 0) {\n\t\tcrearArregloClientes(arreglo[1], arreglo[2], arreglo[3], arreglo[4], arreglo[5]);\n\t} else if(arreglo[0].localeCompare(\"iniciarArregloPrestamos\") == 0) {\n\t\tcrearArregloCreditos(arreglo[1], arreglo[2], arreglo[3], arreglo[4], arreglo[5], arreglo[6], arreglo[7]);\n\t} else if(arreglo[0].localeCompare(\"comportamientoPago\") == 0) {\n\t\tcomportamientoPago(arreglo[1], arreglo[2], arreglo[3], arreglo[4], arreglo[5]);\n\t} else if(arreglo[0].localeCompare(\"tiposCredito\") == 0) {\n\t\tconsole.log(\"JIJIJIJIJIJIJIJIJIJI\")\n\t\ttipoCredito(arreglo[1], arreglo[2], arreglo[3]);\n\t} else if(arreglo[0].localeCompare(\"categoriasClasificacion\") == 0) {\n\t\tconsole.log(\"JOJOJOJOJOJOJOJOJOJO\")\n\t\tcategoriasClasificacion(arreglo[1], arreglo[2], arreglo[3]);\n\t} else if(arreglo[0].localeCompare(\"estimacionDeterioro\") == 0) {\n\t\testimacionDeterioro(arreglo[1]);\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\t\tHACER  METODO GUARDAR VALIDACION PARA GUARDAR A TABLAS (Porque fue calificado el prestamo)\t*/\n/*\t\tHACER  ARREGLOS DE RESULTADOS CON CALCULO MISMA VARIABLE PARA AHORRAR MEMORIA\t*/\n/*\t\tver cuaderno pasos\t\t\t*/\n/*\t\tguardar bitacora moras\t\t*/\n\n\n/***************\tVARIABLES\t***************/\nvar arregloPlanPagos = [];\t\t//Arreglo que contiene el plan de pagos individuales de los prestamos\n/*\t\t\t\t\t=arregloPlanPagos=\n\t[cliente1]\t[prestamo1]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo2]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo3]\t\t[pago1, pago2, pago3]\n\t[cliente2]\t[prestamo1]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo2]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo3]\t\t[pago1, pago2, pago3]\n*/\nvar arregloPagos = [];\t\t//Arreglo que contiene los pagos individuales de los prestamos\n/*\t\t\t\t\t=arregloPagos=\n\t[cliente1]\t[prestamo1]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo2]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo3]\t\t[pago1, pago2, pago3]\n\t[cliente2]\t[prestamo1]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo2]\t\t[pago1, pago2, pago3]\n\t\t\t\t[prestamo3]\t\t[pago1, pago2, pago3]\n*/\nvar arregloCreditos = [];\t\t//Arreglo que contiene los prestamos ordenados ascendentemente por el id de cliente\n/*\t\t\t\t\t=arregloCreditos=\n\t[cliente1]\t[prestamo1, prestamo2, prestamo3]\n\t[cliente2]\t[prestamo1, prestamo2, prestamo3]\n\t[cliente3]\t[prestamo1, prestamo2, prestamo3]\n*/\nvar arregloClientes = [];\t\t//Arreglo que contiene los clientes ordenados ascendentemente por id\n/*\t\t\t\t\t=arregloClientes=\n\t[cliente1]\n\t[cliente2]\n\t[cliente3]\n*/\n\n\n/*\t\t\n\tDEF: Ordenar arreglo de pagos por fecha\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de pagos ordenado por fecha\n*/\n\nfunction ordenarPagos (arregloCreditosTodos, campoFecha) {\n\tarregloCreditosTodos.sort(function(a, b){\n            if(a[campoFecha].getTime() < b[campoFecha].getTime()) { return -1; }\n            if(a[campoFecha].getTime() > b[campoFecha].getTime()) { return 1; }\n            return 0;\n        });\n}\n\n\n/*\t\t\n\tDEF: Metodo para crear arreglo de clientes ordenados por id\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de clientes ordenados ascendentemente por id\n*/\n\nfunction crearArregloClientes (arregloCreditosTodos, campoClienteID, tipoCampoCliente, camposAGuardarCreditosDeTablas, retornarArreglos) {\n\t//arregloClientes = [];\n\tif(tipoCampoCliente == 'varchar' || tipoCampoCliente == 'int' || tipoCampoCliente == 'decimal') {\n\t\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\t\tinsercionBinariaClientes(arregloCreditosTodos[i], campoClienteID, tipoCampoCliente, camposAGuardarCreditosDeTablas);\n\t\t};\n\t\tconsole.log(\"FIN ARREGLO CLIENTES\");\n\t\tconsole.log(arregloClientes);\n\t\t//retornarArreglos = el ultimo arreglo que deberia ser creado para retornar el mensaje\n\t\t//if(retornarArreglos)\n\t\t\tpostMessage(\"terminoCrearArreglos\");\n\t} else {\n\t\t//add bitacora no se permite tipo id\n\t}\n}\n\n/*export const prueba =  () => {\n\tconsole.log(\"SIII\");\n}*/\n\n/*\t\t\n\tDEF: Metodo para crear arreglo de prestamos ordenados por id de cliente\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de prestamos ordenados por id de cliente\n*/\n\nfunction crearArregloCreditos (arregloCreditosTodos, campoClienteID, campoPrestamoID, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarCreditosDeTablas, retornarArreglos) {\n\t//arregloCreditos = [];\n\tif(tipoCampoCliente == 'varchar' || tipoCampoCliente == 'int' || tipoCampoCliente == 'decimal') {\n\t\tif(tipoCampoNumCuenta == 'varchar' || tipoCampoNumCuenta == 'int' || tipoCampoNumCuenta == 'decimal') {\n\t\t\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\t\t\tinsercionBinariaCreditos(arregloCreditosTodos[i], campoClienteID, campoPrestamoID, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarCreditosDeTablas);\n\t\t\t};\n\t\t\tconsole.log(\"FIN ARREGLO CREDITOS\");\n\t\t\tconsole.log(arregloCreditos);\n\t\t\t//retornarArreglos = el ultimo arreglo que deberia ser creado para retornar el mensaje\n\t\t\t//if(retornarArreglos)\n\t\t\t\tpostMessage(\"terminoCrearArreglos\");\n\t\t} else {\n\t\t\t//add bitacora no se permite tipo id\n\t\t}\n\t} else {\n\t\t//add bitacora no se permite tipo id\n\t}\n}\n\n/*\t\t\n\tDEF: Metodo para crear arreglo de pagos de prestamos ordenados por id de cliente\n\tINPUT: arreglo de todos los pagos de credito\n\tOUTPUT: arreglo de pagos de prestamos ordenados por id de cliente\n*/\n\nfunction crearArregloPagos (arregloCreditosTodos) {\n\tarregloPagos = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\tinsercionBinaria(arregloCreditosTodos[i], 'numeroCuenta', arregloPagos);\n\t};\n}\n\n\n/*\t\t\n\tDEF: Metodo para calcular los dias de mora\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arreglo de prestamos individuales con su valor de dias de mora\n*/\n\nfunction calcularDiasMora (arregloCreditosTodos) {\n\tvar arregloPrestamos = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\t//i = posicion cliente\n\t\tfor (var j = 0; j < arregloCreditosTodos[i].length; j++) {\n\t\t\t//j = posicion prestamo\n\t\t\tfor (var k = 0; k < arregloCreditosTodos[i][j].length; k++) {\n\t\t\t\t//k = posicion pago\n\t\t\t\tarregloPagos[i][j][k];\n\t\t\t};\n\t\t};\n\t};\n}\n\n/*\t\t\n\tDEF: Metodo para clasificar prestamos individuales\n\tINPUT: arreglo de todos los pagos de credito ordenado por fecha\n\tOUTPUT: arregloCreditos clasificado por prestamos individuales\n*/\n\nfunction clasificarCreditos (arregloCreditosTodos) {\n\tvar arregloPrestamos = [];\n\tfor (var i = 0; i < arregloCreditosTodos.length; i++) {\n\t\t//i = posicion cliente\n\t\tfor (var j = 0; j < arregloCreditosTodos[i].length; j++) {\n\t\t\t//j = posicion prestamo\n\t\t\tfor (var k = 0; k < Things.length; k++) {\n\t\t\t\t//k = posicion pago\n\t\t\t};\n\t\t};\n\t};\n}\n\n/*\t\t\n\tDEF: Metodo que retorna los arreglos para guardar los resultados\n\tINPUT: boleans que dicen que arreglos retornar\n\tOUTPUT: arreglo a guardar\n*/\n\n/*function retornarArreglos (retornarClientes, retornarCreditos, retornarPagos, retornarPlanPagos) {\n\tif(retornarClientes) {\n\t\tpostMessage([\"guardarResultados\", arregloClientes]);\n\t}\n\tif(retornarCreditos) {\n\t\tpostMessage([\"guardarResultados\", arregloPrestamos]);\n\t}\n\tif(retornarPagos) {\n\t\tpostMessage([\"guardarResultados\", arregloPagos]);\n\t}\n\tif(retornarPlanPagos) {\n\t\tpostMessage([\"guardarResultados\", arregloPlanPagos]);\n\t}\n}*/\n\nexport function retornarClientes () {\n\treturn arregloClientes;\n}\n\nexport function retornarPrestamos () {\n\treturn arregloCreditos;\n}\n\n\n\n\n\n\n/*\t\t\tCOMPORTAMIENTO DE PAGO\t\t\t*/\nfunction comportamientoPago (prestamoCampos, valoresPrestamos, planPagoCampos, valoresPlanPago, comportamientoPago) {\n\tconsole.log(\"prestamoCampos\");\n\tconsole.log(prestamoCampos);\n\tconsole.log(\"valoresPrestamos\");\n\tconsole.log(valoresPrestamos);\n\tconsole.log(\"planPagoCampos\");\n\tconsole.log(planPagoCampos);\n\tconsole.log(\"valoresPlanPago\");\n\tconsole.log(valoresPlanPago);\n\tconsole.log(\"comportamientoPago\");\n\tconsole.log(comportamientoPago);\n\tvar idClientePrestamoCampoID = \tprestamoCampos.filter(function( object ) {\n\t\t\t\t\t\t\t            return object.ID == comportamientoPago.idClientePrestamoCampoID;\n\t\t\t\t\t\t\t        });\n\tvar idClientePlanPagoCampoID = \tplanPagoCampos.filter(function( object ) {\n\t\t\t\t\t\t\t            return object.ID == comportamientoPago.idClientePlanPagoCampoID;\n\t\t\t\t\t\t\t        });\n\tvar numeroPrestamoCampoID = prestamoCampos.filter(function( object ) {\n\t\t\t\t\t\t            return object.ID == comportamientoPago.numeroPrestamoCampoID;\n\t\t\t\t\t\t        });\n\tvar numeroPlanPagoCampoID = planPagoCampos.filter(function( object ) {\n\t\t\t\t\t\t            return object.ID == comportamientoPago.numeroPlanPagoCampoID;\n\t\t\t\t\t\t        });\n\tvar pagoCapitalPrestamoCampoID = prestamoCampos.filter(function( object ) {\n\t\t\t\t\t\t\t            return object.ID == comportamientoPago.pagoCapitalPrestamoCampoID;\n\t\t\t\t\t\t\t        });\n\tvar pagoCapitalPlanPagoCampoID = planPagoCampos.filter(function( object ) {\n\t\t\t\t\t\t\t            return object.ID == comportamientoPago.pagoCapitalPlanPagoCampoID;\n\t\t\t\t\t\t\t        });\n\tvar pagoImpuestosPrestamoCampoID = \tprestamoCampos.filter(function( object ) {\n\t\t\t\t\t\t\t\t            return object.ID == comportamientoPago.pagoImpuestosPrestamoCampoID;\n\t\t\t\t\t\t\t\t        });\n\tvar pagoImpuestosPlanPagoCampoID = \tplanPagoCampos.filter(function( object ) {\n\t\t\t\t\t\t\t\t            return object.ID == comportamientoPago.pagoImpuestosPlanPagoCampoID;\n\t\t\t\t\t\t\t\t        });\n\tvar fechaPrestamoCampoID = \tprestamoCampos.filter(function( object ) {\n\t\t\t\t\t\t            return object.ID == comportamientoPago.fechaPrestamoCampoID;\n\t\t\t\t\t\t        });\n\tvar fechaPlanPagoCampoID = \tplanPagoCampos.filter(function( object ) {\n\t\t\t\t\t\t            return object.ID == comportamientoPago.fechaPlanPagoCampoID;\n\t\t\t\t\t\t        });\n\tconsole.log(\"idClientePrestamoCampoID\");\n\tconsole.log(idClientePrestamoCampoID);\n\tconsole.log(\"idClientePlanPagoCampoID\");\n\tconsole.log(idClientePlanPagoCampoID);\n\tconsole.log(\"numeroPrestamoCampoID\");\n\tconsole.log(numeroPrestamoCampoID);\n\tconsole.log(\"numeroPlanPagoCampoID\");\n\tconsole.log(numeroPlanPagoCampoID);\n\tconsole.log(\"pagoCapitalPrestamoCampoID\");\n\tconsole.log(pagoCapitalPrestamoCampoID);\n\tconsole.log(\"pagoCapitalPlanPagoCampoID\");\n\tconsole.log(pagoCapitalPlanPagoCampoID);\n\tconsole.log(\"pagoImpuestosPrestamoCampoID\");\n\tconsole.log(pagoImpuestosPrestamoCampoID);\n\tconsole.log(\"pagoImpuestosPlanPagoCampoID\");\n\tconsole.log(pagoImpuestosPlanPagoCampoID);\n\tconsole.log(\"fechaPrestamoCampoID\");\n\tconsole.log(fechaPrestamoCampoID);\n\tconsole.log(\"fechaPlanPagoCampoID\");\n\tconsole.log(fechaPlanPagoCampoID);\n\t//insertarPagoPrestamoArreglos();\n\tfor (var i = 0; i < valoresPrestamos.length; i++) {\n\t\t/*insercionBinariaClientes(valoresPrestamos[i], idClientePrestamoCampoID[0].nombre, idClientePrestamoCampoID[0].tipo, idClientePrestamoCampoID);\n\t\tinsercionBinariaCreditos(valoresPrestamos[i], idClientePrestamoCampoID[0].nombre, numeroPrestamoCampoID[0].nombre, idClientePrestamoCampoID[0].tipo, numeroPrestamoCampoID[0].tipo, idClientePrestamoCampoID, numeroPrestamoCampoID);*/\n\t\tinsercionBinariaPagos(valoresPrestamos[i], idClientePrestamoCampoID[0].nombre, numeroPrestamoCampoID[0].nombre, idClientePrestamoCampoID[0].tipo, numeroPrestamoCampoID[0].tipo, idClientePrestamoCampoID, numeroPrestamoCampoID, pagoCapitalPrestamoCampoID.concat(pagoImpuestosPrestamoCampoID, fechaPrestamoCampoID) );\n\t};\n\tfor (var i = 0; i < valoresPlanPago.length; i++) {\n\t\tinsercionBinariaPlanPagos(valoresPlanPago[i], idClientePrestamoCampoID[0].nombre, numeroPrestamoCampoID[0].nombre, idClientePrestamoCampoID[0].tipo, numeroPrestamoCampoID[0].tipo, idClientePrestamoCampoID, numeroPrestamoCampoID, pagoCapitalPrestamoCampoID.concat(pagoImpuestosPrestamoCampoID, fechaPrestamoCampoID) );\n\t};\n\tfor (var i = 0; i < arregloPagos.length; i++) {\n\t\tfor (var j = 0; j < arregloPagos[i].length; j++) {\n\t\t\tif(arregloPagos[i][j] != undefined) {\n\t\t\t\tordenarPagos(arregloPagos[i][j], fechaPrestamoCampoID[0].nombre);\n\t\t\t}\n\t\t};\n\t};\n\tfor (var i = 0; i < arregloPlanPagos.length; i++) {\n\t\tfor (var j = 0; j < arregloPlanPagos[i].length; j++) {\n\t\t\tif(arregloPlanPagos[i][j] != undefined) {\n\t\t\t\tordenarPagos(arregloPlanPagos[i][j], fechaPlanPagoCampoID[0].nombre);\n\t\t\t}\n\t\t};\n\t};\n\tconsole.log(valoresPrestamos);\n\tconsole.log(valoresPlanPago);\n\tconsole.log(arregloClientes);\n\tconsole.log(arregloCreditos);\n\tconsole.log(arregloPagos);\n\tconsole.log(arregloPlanPagos);\n\tinitEvalcomportamientoPago(pagoCapitalPrestamoCampoID[0].nombre, pagoCapitalPlanPagoCampoID[0].nombre, pagoImpuestosPrestamoCampoID[0].nombre, pagoImpuestosPlanPagoCampoID[0].nombre, fechaPrestamoCampoID[0].nombre, fechaPlanPagoCampoID[0].nombre);\n}\n\nfunction initEvalcomportamientoPago (capitalPago, capitalPlanPago, impuestoPago, impuestoPlanPago, fechaPago, fechaPlanPago) {\n\tfor (var i = 0; i < arregloClientes.length; i++) {\n\t\tvar numPagosAtrasadosCliente = 0;\n\t\tvar diasMoraCliente = 0;\n\t\tvar totalCapitalPagado = 0;\n\t\tvar totalImpuestosPagado = 0;\n\t\tvar totalCapitalPlanPagos = 0;\n\t\tvar totalImpuestosPlanPagos = 0;\n\t\tconsole.log(\"ENTRE CLIENTES = \"+i);\n\t\tfor (var j = 0; j < arregloCreditos[i].length; j++) {\n\t\t\tvar mesViejo = new Date(2019, 0, 1);\n\t\t\tvar totalCapitalPagadoPrestamo = 0;\n\t\t\tvar totalImpuestosPagadoPrestamo = 0;\n\t\t\tvar totalCapitalPlanPagoPrestamo = 0;\n\t\t\tvar totalImpuestosPlanPagoPrestamo = 0;\n\t\t\tconsole.log(\"ENTRE PRESTAMOS = \"+j);\n\t\t\tif( arregloPlanPagos[i][j].length > 0 ) {\n\t\t\t\tvar fechaPactadaPago = arregloPlanPagos[i][j][0][fechaPlanPago];\n\t\t\t\tvar banderaVerFechaPactada = true;\n\t\t\t\tvar arregloPlanPagosDeCredito = [];\n\t\t\t\tfor (var k = 0; k < arregloPagos[i][j].length; k++) {\n\t\t\t\t\t//validando cuando cambia de mes, para ver si el pago se hizo a tiempo\n\t\t\t\t\tif(mesViejo.getMonth() < arregloPagos[i][j][k][fechaPago].getMonth()) {\n\t\t\t\t\t\tmesViejo = arregloPagos[i][j][k][fechaPago];\n\t\t\t\t\t\tbanderaVerFechaPactada = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(mesViejo.getMonth() == arregloPagos[i][j][k][fechaPago].getMonth() && banderaVerFechaPactada) {\n\t\t\t\t\t\tif (fechaPactadaPago.getDate() > arregloPagos[i][j][k][fechaPago].getDate()) {\n\t\t\t\t\t\t\tnumPagosAtrasadosCliente++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbanderaVerFechaPactada = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttotalCapitalPagado+=arregloPagos[i][j][k][capitalPago];\n\t\t\t\t\ttotalCapitalPagadoPrestamo+=arregloPagos[i][j][k][capitalPago];\n\t\t\t\t\ttotalImpuestosPagado+=arregloPagos[i][j][k][impuestoPago];\n\t\t\t\t\ttotalImpuestosPagadoPrestamo+=arregloPagos[i][j][k][impuestoPago];\n\t\t\t\t};\n\n\t\t\t\tfor (var k = 0; k < arregloPlanPagos[i][j].length; k++) {\n\t\t\t\t\tvar index = -1;\n\t\t\t\t\tfor (var p = 0; p < arregloPlanPagosDeCredito.length; p++) {\n\t\t\t\t\t\tif(arregloPlanPagosDeCredito[p].mes.getMonth() == arregloPlanPagos[i][j][k][fechaPlanPago].getMonth()) {\n\t\t\t\t\t\t\tindex = p;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tif(index != -1){\n\t\t\t\t\t\tarregloPlanPagosDeCredito[index].montoCapital+=arregloPlanPagos[i][j][k][capitalPlanPago];\n\t\t\t\t\t\tarregloPlanPagosDeCredito[index].montoImpuesto+=arregloPlanPagos[i][j][k][impuestoPlanPago];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(arregloPlanPagosDeCredito.length > 0) {\n\t\t\t\t\t\t\tarregloPlanPagosDeCredito.push({mes: arregloPlanPagos[i][j][k][fechaPlanPago], montoCapital: arregloPlanPagos[i][j][k][capitalPlanPago], montoImpuesto: arregloPlanPagos[i][j][k][impuestoPlanPago], montoCapitalTotal: arregloPlanPagosDeCredito[arregloPlanPagosDeCredito.length-1].montoCapitalTotal+arregloPlanPagos[i][j][k][capitalPlanPago], montoImpuestoTotal: arregloPlanPagosDeCredito[arregloPlanPagosDeCredito.length-1].montoImpuestoTotal+arregloPlanPagos[i][j][k][impuestoPlanPago]});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarregloPlanPagosDeCredito.push({mes: arregloPlanPagos[i][j][k][fechaPlanPago], montoCapital: arregloPlanPagos[i][j][k][capitalPlanPago], montoImpuesto: arregloPlanPagos[i][j][k][impuestoPlanPago], montoCapitalTotal: arregloPlanPagos[i][j][k][capitalPlanPago], montoImpuestoTotal: arregloPlanPagos[i][j][k][impuestoPlanPago]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttotalCapitalPlanPagos+=arregloPlanPagos[i][j][k][capitalPlanPago];\n\t\t\t\t\ttotalCapitalPlanPagoPrestamo+=arregloPlanPagos[i][j][k][capitalPlanPago];\n\t\t\t\t\ttotalImpuestosPlanPagos+=arregloPlanPagos[i][j][k][impuestoPlanPago];\n\t\t\t\t\ttotalImpuestosPlanPagoPrestamo+=arregloPlanPagos[i][j][k][impuestoPlanPago];\n\t\t\t\t};\n\t\t\t\tvar mesDelPlan, posicionPlan = -1;\n\t\t\t\tfor (var p = 0; p < arregloPlanPagosDeCredito.length; p++) {\n\t\t\t\t\tconsole.log(\"SIIIISUAISUAHSJKAHSKJAHSKJHKJSH\");\n\t\t\t\t\tconsole.log(arregloPlanPagosDeCredito);\n\t\t\t\t\tif(totalCapitalPagadoPrestamo >= arregloPlanPagosDeCredito[p].montoCapitalTotal && totalImpuestosPlanPagoPrestamo >= arregloPlanPagosDeCredito[p].montoImpuestoTotal) {\n\t\t\t\t\t\tconsole.log(\"NOOOOOOO\")\n\t\t\t\t\t\tmesDelPlan = arregloPlanPagosDeCredito[p].mes;\n\t\t\t\t\t\tposicionPlan = p;\n\t\t\t\t\t\t//break;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif(posicionPlan != -1) {\n\t\t\t\t\tvar fechaInicial = arregloPlanPagosDeCredito[0].mes.getDate();\n\t\t\t\t\tvar fechaAIniciarContar = new Date(arregloPlanPagosDeCredito[0].mes.getFullYear(), arregloPlanPagosDeCredito[0].mes.getMonth(), fechaInicial + 1);\n\t\t\t\t\tvar hoy = moment();\n\t\t\t\t\tvar momentFechaPlan = moment(mesDelPlan);\n\t\t\t\t\tvar diferenciaDias = hoy.diff(momentFechaPlan, 'days');\n\t\t\t\t\tconsole.log(\"---------------------\");\n\t\t\t\t\tconsole.log(\"MES DEL PLAN\");\n\t\t\t\t\tconsole.log(mesDelPlan);\n\t\t\t\t\tconsole.log(\"HOY\");\n\t\t\t\t\tconsole.log(hoy);\n\t\t\t\t\tconsole.log(\"DIFF DIAS\");\n\t\t\t\t\tconsole.log(diferenciaDias);\n\t\t\t\t\tconsole.log(\"CREDITO\");\n\t\t\t\t\tconsole.log(arregloCreditos[i][j]);\n\t\t\t\t\tconsole.log(\"///////////////////\");\n\n\t\t\t\t\tarregloCreditos[i][j][\"mesDelPlan\"] = mesDelPlan;\n\t\t\t\t\tarregloCreditos[i][j][\"diasMora\"] = diferenciaDias;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//agregar no existe plan pagos para tal prestamo de tal cliente\n\t\t\t\ttotalCapitalPagadoPrestamo = 0;\n\t\t\t\ttotalImpuestosPagadoPrestamo = 0;\n\t\t\t\ttotalCapitalPlanPagoPrestamo = 0;\n\t\t\t\ttotalImpuestosPlanPagoPrestamo = 0;\n\t\t\t}\n\t\t\tarregloCreditos[i][j][\"t0talC4pitalPagado\"] = totalCapitalPagadoPrestamo;\n\t\t\tarregloCreditos[i][j][\"t0talC4pitalD3beriaPagado\"] = totalCapitalPlanPagoPrestamo;\n\t\t\tarregloCreditos[i][j][\"t0tal1mpu3stosPagado\"] = totalImpuestosPagadoPrestamo;\n\t\t\tarregloCreditos[i][j][\"t0tal1mpu3stosD3beriaPagado\"] = totalImpuestosPlanPagoPrestamo;\n\t\t};\n\t\tarregloClientes[i][\"t0talC4pitalPagado\"] = totalCapitalPagado;\n\t\tarregloClientes[i][\"t0talC4pitalD3beriaPagado\"] = totalCapitalPlanPagos;\n\t\tarregloClientes[i][\"t0tal1mpu3stosPagado\"] = totalImpuestosPagado;\n\t\tarregloClientes[i][\"t0tal1mpu3stosD3beriaPagado\"] = totalImpuestosPlanPagos;\n\t};\n}\n\nfunction getPagoAtrasadoFechaPactada () {\n\t// body...\n}\n\nfunction saveClientsDB (valorAGuardar) {\n\tvar camposAGuardar = Object.getOwnPropertyNames(a);\n\tfor (var i = 0; i < camposAGuardar.length; i++) {\n\t\tvar esValidoCampo = (valorAGuardar[camposAGuardar[i]]);\n\t};\n}\n\n\n\n/*\n\nFUTURE----\n________________________________________________________________________________________________________________________________________________________________\n|\tAGREGAR TOTALES DE MONTOS, DE LOS SALDOS PAGADOS EN CAPITAL E IMPUESTOS ,POR PAGO A PRESTAMO Y PLAN PAGO,\n|\n|\tAGREGAR MONTOS POR CATEGORIA DE CAPACIDAD DE PAGO DEL DEUDOR, TIPO DE CREDITO, CATEGORIAS DE CLASIFICACION, CRITERIO DETERIORO\n|_________________________________________________________________________________________________________________________________________________________________\n\n\t\t^^^^PERO AGREGAR POR CADA CATEGORIA DE CAPACIDAD DE PAGO DEL DEUDOR, TIPO DE CREDITO, CATEGORIAS DE CLASIFICACION, CRITERIO DETERIORO\n\n\tGUARDAR VALOR PROMEDIO DE (PAGADO, VA A PAGAR) POR CATEGORIA DE CAPACIDAD DE PAGO DEL DEUDOR, TIPO DE CREDITO, CATEGORIAS DE CLASIFICACION, CRITERIO DETERIORO\n\t\t\t\n\t\t\tPAGADO: SALDO CAPITAL\n\t\t\tVA A PAGAR(DEBERIA PAGAR^^^^[ANOTHER PART CODE]):PLAN DE PAGO\n\n\t[los saldos por categoria van en otra tabla de totales]\n*/\n\n\n\n\n/* ================================\t\tTIPO DE CREDITO\t\t================================ */\n\n/*\t\t\n\tDEF: Metodo para actualizar el campo de tipo de credito de prestamo\n\tINPUT: tipos de creditos, reglas de tipos de creditos, valores de clientes a evaluar\n\tOUTPUT:\n\n\tn = arreglo de tipos de creditos = [tipo1, tipo2 ...]\n\tm = arreglo de reglas de tipos de creditos = [[regla1, regla2], [regla3, regla2]]\n*/\n\nfunction tipoCredito (tiposCreditos, reglasTiposCreditos) {\n\tfor (var i = 0; i < arregloCreditos.length; i++) {\n\t\tfor (var j = 0; j < arregloCreditos[i].length; j++) {\n\t\t\tarregloCreditos[i][j].tipoCredito = 'No Tiene';\n\t\t\tfor (var n = 0; n < tiposCreditos.length; n++) {\n\t\t\t\tvar contadorCumpleParametros = 0;\n\t\t\t\tfor (var m = 0; m < reglasTiposCreditos[n].length; m++) {\n\t\t\t\t\t//reglasTiposCreditos[n][m]\n\t\t\t\t\tvar objeto = '';\n\t\t\t\t\tconsole.log('reglasTiposCreditos[n][m]');\n\t\t\t\t\tconsole.log(reglasTiposCreditos[n][m]);\n\t\t\t\t\tif(reglasTiposCreditos[n][m].campoValor.tabla.localeCompare(\"Cliente\") == 0)\n\t\t\t\t\t\tobjeto = \"arregloClientes[i]\";\n\t\t\t\t\telse\n\t\t\t\t\t\tobjeto = \"arregloCreditos[i][j]\";\n\t\t\t\t\t/*console.log('n = '+n+'\\tm = '+m);\n\t\t\t\t\tconsole.log('reglasTiposCreditos[n][m]');\n\t\t\t\t\tconsole.log(reglasTiposCreditos[n][m]);\n\t\t\t\t\tconsole.log('reglasTiposCreditos[n][m].valorValores');\n\t\t\t\t\tconsole.log(reglasTiposCreditos[n][m].valorValores);*/\n\t\t\t\t\tvar condicionRegla = getEvalCodeCondition(reglasTiposCreditos[n][m], objeto);\n\t\t\t\t\t/*console.log('condicionRegla');\n\t\t\t\t\tconsole.log(condicionRegla);*/\n\t\t\t\t\tif( eval(condicionRegla) ) {\n\t\t\t\t\t\tcontadorCumpleParametros++;\n\t\t\t\t\t\t//console.log('CUMPLIO');\n\t\t\t\t\t} else  {\n\t\t\t\t\t\t//console.log('NO CUMPLIO');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t/*console.log('contadorCumpleParametros');\n\t\t\t\t\tconsole.log(contadorCumpleParametros);\n\t\t\t\t\tconsole.log('reglasTiposCreditos[n].length');\n\t\t\t\t\tconsole.log(reglasTiposCreditos[n].length);*/\n\t\t\t\t\tif (reglasTiposCreditos[n].length-1 == m && contadorCumpleParametros == reglasTiposCreditos[n].length) {\n\t\t\t\t\t\tarregloCreditos[i][j].tipoCredito = tiposCreditos[n].nombre;\n\t\t\t\t\t\tarregloCreditos[i][j].tipoCreditoID = tiposCreditos[n].ID;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n}\n\n\n/* ================================\t\tCATEGORIAS DE CLASIFICACION\t\t================================ */\n\n/*\t\t\n\tDEF: Metodo para actualizar el campo de tipo de credito de prestamo\n\tINPUT: tipos de creditos, reglas de tipos de creditos, valores de clientes a evaluar\n\tOUTPUT:\n\n\tn = arreglo de tipos de creditos = [tipo1, tipo2 ...]\n\tm = arreglo de reglas de tipos de creditos = [[regla1, regla2], [regla3, regla2]]\n*/\n\nfunction categoriasClasificacion (tiposCreditos, reglasTiposCreditos) {\n\tconsole.log(\"categoriasClasificacion  categoriasClasificacion  categoriasClasificacion\");\n\tfor (var i = 0; i < arregloCreditos.length; i++) {\n\t\tfor (var j = 0; j < arregloCreditos[i].length; j++) {\n\t\t\tarregloCreditos[i][j].categoriaClasificacion = 'No Tiene';\n\t\t\tfor (var n = 0; n < tiposCreditos.length; n++) {\n\t\t\t\tvar contadorCumpleParametros = 0;\n\t\t\t\tfor (var m = 0; m < reglasTiposCreditos[n].length; m++) {\n\t\t\t\t\t//reglasTiposCreditos[n][m]\n\t\t\t\t\tvar objeto = '';\n\t\t\t\t\tif(reglasTiposCreditos[n][m].campoValor.tabla.localeCompare(\"Cliente\") == 0)\n\t\t\t\t\t\tobjeto = \"arregloClientes[i]\";\n\t\t\t\t\telse\n\t\t\t\t\t\tobjeto = \"arregloCreditos[i][j]\";\n\t\t\t\t\t/*console.log('n = '+n+'\\tm = '+m);\n\t\t\t\t\tconsole.log('reglasTiposCreditos[n][m]');\n\t\t\t\t\tconsole.log(reglasTiposCreditos[n][m]);\n\t\t\t\t\tconsole.log('reglasTiposCreditos[n][m].valorValores');\n\t\t\t\t\tconsole.log(reglasTiposCreditos[n][m].valorValores);*/\n\t\t\t\t\tvar condicionRegla = getEvalCodeCondition(reglasTiposCreditos[n][m], objeto);\n\t\t\t\t\tif( eval(condicionRegla) ) {\n\t\t\t\t\t\tcontadorCumpleParametros++;\n\t\t\t\t\t\t//console.log('CUMPLIO');\n\t\t\t\t\t} else  {\n\t\t\t\t\t\t//console.log('NO CUMPLIO');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t/*console.log('contadorCumpleParametros');\n\t\t\t\t\tconsole.log(contadorCumpleParametros);\n\t\t\t\t\tconsole.log('reglasTiposCreditos[n].length');\n\t\t\t\t\tconsole.log(reglasTiposCreditos[n].length);*/\n\t\t\t\t\tif (reglasTiposCreditos[n].length-1 == m && contadorCumpleParametros == reglasTiposCreditos[n].length) {\n\t\t\t\t\t\tarregloCreditos[i][j].categoriaClasificacion = tiposCreditos[n].tipoCredito;\n\t\t\t\t\t\tarregloCreditos[i][j].categoriaClasificacionID = tiposCreditos[n].ID;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* ================================\t\tESTIMACIONES DETERIORO\t\t================================ */\n\n/*\t\t\n\tDEF: Metodo para actualizar el campo de estimacion por deterioro, a nivel de cliente, prestamo\n\tINPUT: tipos de creditos, reglas de tipos de creditos, valores de clientes a evaluar\n\tOUTPUT:\n\n\tn = arreglo de tipos de creditos = [tipo1, tipo2 ...]\n\tm = arreglo de reglas de tipos de creditos = [[regla1, regla2], [regla3, regla2]]\n*/\n\nfunction estimacionDeterioro (estimacionesDeterioro) {\n\tfor (var i = 0; i < arregloClientes.length; i++) {\n\t\tarregloClientes[i].estimacionDeterioro = 0;\n\t\tfor (var j = 0; j < arregloCreditos[i].length; j++) {\n\t\t\tarregloCreditos[i][j].estimacionDeterioro = 0;\n\t\t\tarregloCreditos[i][j].categoriaEstimacionDeterioro = 'No Tiene';\n\t\t\tfor (var n = 0; n < estimacionesDeterioro.length; n++) {\n\t\t\t\tif (estimacionesDeterioro[n].categoriaClasPadre == arregloCreditos[i][j].categoriaClasificacionID && estimacionesDeterioro[n].tipoDeCredito == arregloCreditos[i][j].tipoCreditoID && estimacionesDeterioro[n].inicioMora <= arregloCreditos[i][j].diasMora && estimacionesDeterioro[n].finMora >= arregloCreditos[i][j].diasMora) {\n\t\t\t\t\tarregloCreditos[i][j].estimacionDeterioro = arregloCreditos[i][j].t0talC4pitalPagado * estimacionesDeterioro[n].estimacionDeterioro;\n\t\t\t\t\tarregloCreditos[i][j].categoriaEstimacionDeterioro = estimacionesDeterioro[n].categoria;\n\t\t\t\t\tarregloClientes[i].estimacionDeterioro += arregloCreditos[i][j].estimacionDeterioro;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\t\t\n\tDEF: Metodo para crear cadena lista para ser evaluada windows[]\n\tINPUT: arreglo de regla con valores y campos ya colocados como campos, nombre de funcion a retornar\n\tOUTPUT: cadena con contenido para ser introducido al objeto windows[] retornando a la funcion pasada como parametro\n*/\n\nfunction getWindowsCodeFromRules (arregloReglas, nombreFunRet, nombreArreglo) {\n\tfor (var i = 0; i < arregloReglas.length; i++) {\n\t\tvar codigoRegla = getEvalCode(arregloReglas[i], \"\");\n\t};\n}\n\n/*\t\t\n\tDEF: Metodo para regresar cadena lista para ser evaluada en eval\n\tINPUT: regla con valores\n\tOUTPUT: cadena con contenido para ser introducido al if\n*/\n\nfunction getEvalCodeCondition (regla, objeto) {\n\tvar codigo = '';\n\tvar codigoCampo = objeto+\".\"+regla.campoValor.nombre;\n\tvar valores = regla.valorValores;\n\tfor (var i = 0; i < valores.length; i++) {\n\t\tif(regla.operacion.localeCompare(\"sumIf\") == 0 && codigo.length > 0)\n\t\t\tcodigo += \" || \";\n\t\telse if(codigo.length > 0)\n\t\t\tcodigo += \" && \";\n\t\tif(regla.campoTipo.localeCompare(\"int\") == 0 || regla.campoTipo.localeCompare(\"decimal\") == 0) {\n\t\t\tcodigo += \" \" + codigoCampo + \" \" + regla.operacion + \" \" + valores[i].valor;\n\t\t} else if(regla.campoTipo.localeCompare(\"varchar\") == 0) {\n\t\t\tcodigo += \" \" + codigoCampo + \".localeCompare('\" + valores[i].valor + \"') == 0 \";\n\t\t} else if(regla.campoTipo.localeCompare(\"date\") == 0) {\n\t\t\tvar operacion;\n\t\t\tif (regla.operacion.localeCompare(\"==\") == 0) {\n\t\t\t\tcodigo += \" moment(\" + codigoCampo + \").isSame(\" + valores[i].valor + \", 'day') \";\n\t\t\t} else if (regla.operacion.localeCompare(\"!=\") == 0) {\n\t\t\t\tcodigo += \" !moment(\" + codigoCampo + \").isSame(\" + valores[i].valor + \", 'day') \";\n\t\t\t} else if (regla.operacion.localeCompare(\"<\") == 0) {\n\t\t\t\tcodigo += \" !moment(\" + codigoCampo + \").isBefore(\" + valores[i].valor + \", 'day') \";\n\t\t\t} else if (regla.operacion.localeCompare(\"<=\") == 0) {\n\t\t\t\tcodigo += \" !moment(\" + codigoCampo + \").isSameOrBefore(\" + valores[i].valor + \", 'day') \";\n\t\t\t} else if (regla.operacion.localeCompare(\">\") == 0) {\n\t\t\t\tcodigo += \" !moment(\" + codigoCampo + \").isAfter(\" + valores[i].valor + \", 'day') \";\n\t\t\t} else if (regla.operacion.localeCompare(\">=\") == 0) {\n\t\t\t\tcodigo += \" !moment(\" + codigoCampo + \").isSameOrAfter(\" + valores[i].valor + \", 'day') \";\n\t\t\t}\n\t\t} else if(regla.campoTipo.localeCompare(\"bool\") == 0) {\n\t\t\tcodigo += \" \" + codigoCampo + \" \" + regla.operacion + \" \" + valores[i].valor;\n\t\t}\n\t};\n\treturn codigo;\n}\n\n//Puede ser int o decimal\n//Puede ser date\n//Puede ser varchar\n//Puede ser bool\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* ================================\t\tINSERCION BINARIA\t\t================================*/\n\n/*\t\t\n\tDEF: Metodo para insertar binariamente\n\tINPUT: valor a buscar, campo a comparar, arreglo donde insertar\n\tOUTPUT:\n*/\n\nfunction insercionBinariaClientes (valor, campo, tipoCampo, camposAGuardarCreditosDeTablas, startVal, endVal) {\n\tvar length = arregloClientes.length;\n    var start = typeof(startVal) != 'undefined' ? startVal : 0;\n    var end = typeof(endVal) != 'undefined' ? endVal : length - 1;//!! endVal could be 0 don't use || syntax\n    var m = start + Math.floor((end - start)/2);\n    var esString, esInt, esDec;\n    if(tipoCampo == 'varchar') {\n    \tesString = true;\n    } else if(tipoCampo == 'int') {\n    \tesInt = true;\n    } else if(tipoCampo == 'decimal') {\n    \tesDec = true;\n    }\n    if(length == 0) {\n    \tvar newObject = {};\n    \tfor (var i = 0; i < camposAGuardarCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n        arregloClientes.push(newObject);\n        return;\n    }\n    if( ((esInt || esDec) && valor[campo] == arregloClientes[m][campo]) || (esString && valor[campo].localeCompare(arregloClientes[m][campo]) == 0) ) {\n        for (var i = 0; i < camposAGuardarCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tarregloClientes[m][camposAGuardarCreditosDeTablas[i].nombre] = valor[camposAGuardarCreditosDeTablas[i].nombre];\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n        return;\n    }\n    if( ((esInt || esDec) && valor[campo] > arregloClientes[end][campo]) || (esString && valor[campo].localeCompare(arregloClientes[end][campo]) > 0) ) {\n    \tvar newObject = {};\n        for (var i = 0; i < camposAGuardarCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tarregloClientes.splice(end + 1, 0, newObject);\n        return;\n    }\n    if( ((esInt || esDec) && valor[campo] < arregloClientes[start][campo]) || (esString && valor[campo].localeCompare(arregloClientes[start][campo]) < 0) ) {//!!\n        var newObject = {};\n        for (var i = 0; i < camposAGuardarCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tarregloClientes.splice(start, 0, newObject);\n        return;\n    }\n    if(start >= end){\n        return;\n    }\n    if( ((esInt || esDec) && valor[campo] < arregloClientes[m][campo]) || (esString && valor[campo].localeCompare(arregloClientes[m][campo]) < 0) ) {\n        insercionBinariaClientes(valor, campo, tipoCampo, camposAGuardarCreditosDeTablas, start, m - 1);\n        return;\n    }\n    if( ((esInt || esDec) && valor[campo] > arregloClientes[m][campo]) || (esString && valor[campo].localeCompare(arregloClientes[m][campo]) > 0) ) {\n        insercionBinariaClientes(valor, campo, tipoCampo, camposAGuardarCreditosDeTablas, m + 1, end);\n        return;\n    }\n}\n\nfunction insercionBinariaCreditos (valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeCreditosCreditosDeTablas, startVal, endVal) {\n\tvar length = arregloClientes.length;\n    var start = typeof(startVal) != 'undefined' ? startVal : 0;\n    var end = typeof(endVal) != 'undefined' ? endVal : length - 1;//!! endVal could be 0 don't use || syntax\n    var m = start + Math.floor((end - start)/2);\n    var esStringCampoCliente, esIntCampoCliente, esDecCampoCliente;\n    if(tipoCampoCliente == 'varchar') {\n    \tesStringCampoCliente = true;\n    } else if(tipoCampoCliente == 'int') {\n    \tesIntCampoCliente = true;\n    } else if(tipoCampoCliente == 'decimal') {\n    \tesDecCampoCliente = true;\n    }\n    var esStringCampoNumCuenta, esIntCampoNumCuenta, esDecCampoNumCuenta;\n    if(tipoCampoNumCuenta == 'varchar') {\n    \tesStringCampoNumCuenta = true;\n    } else if(tipoCampoNumCuenta == 'int') {\n    \tesIntCampoNumCuenta = true;\n    } else if(tipoCampoNumCuenta == 'decimal') {\n    \tesDecCampoNumCuenta = true;\n    }\n    if(length == 0) {\n    \tif(arregloClientes.length > 0) {\n\t    \tif(arregloCreditos[0] == undefined)\n\t    \t\tarregloCreditos[0] = [];\n\t    \tif(arregloPagos[0] == undefined)\n\t    \t\tarregloPagos[0] = [];\n\t    \tif(arregloPagos[0][0] == undefined)\n\t    \t\tarregloPagos[0][0] = [];\n\t    \t//var newObject = {};\n\t        /*for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};*/\n\t    \tvar newObjectCredito = {};\n\t        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \t//arregloClientes.push(newObject);\n\t        arregloCreditos[0].push(newObjectCredito);\n\t    }\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] == arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) == 0) ) {\n    \tif(arregloCreditos[m] == undefined)\n    \t\tarregloCreditos[m] = [];\n    \tvar existeCredito = false;\n    \tfor (var i = 0; i < arregloCreditos[m].length; i++) {\n    \t\tif( ((esIntCampoNumCuenta || esDecCampoNumCuenta) && valor[campoNumCuenta] == arregloCreditos[m][i][campoNumCuenta]) || (esStringCampoNumCuenta && arregloCreditos[m][i][campoNumCuenta].localeCompare(valor[campoNumCuenta]) == 0) ) {\n    \t\t\texisteCredito = true;\n    \t\t\tbreak;\n    \t\t}\n    \t};\n    \tif(!existeCredito) {\n    \t\tvar newObject = {};\n\t    \tfor (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObject[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tarregloCreditos[m].push(newObject);\n    \t} else {\n\t    \tfor (var j = 0; j < camposAGuardarDeCreditosCreditosDeTablas.length; j++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[j].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tarregloCreditos[m][i][camposAGuardarDeCreditosCreditosDeTablas[j].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n    \t}\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] > arregloClientes[end][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[end][campoCliente]) > 0) ) {\n        //var newObject = {};\n        /*for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};*/\n    \tvar newObjectCredito;\n        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArray = [newObjectCredito];\n    \t//arregloClientes.splice(end + 1, 0, newObject);\n    \tarregloCreditos.splice(end + 1, 0, newArray);\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] < arregloClientes[start][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[start][campoCliente]) < 0) ) {//!!\n    \t//var newObject = {};\n        /*for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};*/\n    \tvar newObjectCredito;\n        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArray = [newObjectCredito];\n        //arregloClientes.splice(start, 0, newObject);\n        arregloCreditos.splice(start, 0, newArray);\n        return;\n    }\n    if(start >= end){\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] < arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) < 0) ) {\n        insercionBinariaCreditos(valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeCreditosCreditosDeTablas, start, m - 1);\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] > arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) > 0) ) {\n        insercionBinariaCreditos(valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeCreditosCreditosDeTablas, m + 1, end);\n        return;\n    }\n}\n\nfunction insercionBinariaPagos (valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeClientesCreditosDeTablas, camposAGuardarDeCreditosCreditosDeTablas, camposAGuardarDePagosCreditosDeTablas, startVal, endVal) {\n\tvar length = arregloClientes.length;\n    var start = typeof(startVal) != 'undefined' ? startVal : 0;\n    var end = typeof(endVal) != 'undefined' ? endVal : length - 1;//!! endVal could be 0 don't use || syntax\n    var m = start + Math.floor((end - start)/2);\n    var esStringCampoCliente, esIntCampoCliente, esDecCampoCliente;\n    if(tipoCampoCliente == 'varchar') {\n    \tesStringCampoCliente = true;\n    } else if(tipoCampoCliente == 'int') {\n    \tesIntCampoCliente = true;\n    } else if(tipoCampoCliente == 'decimal') {\n    \tesDecCampoCliente = true;\n    }\n    var esStringCampoNumCuenta, esIntCampoNumCuenta, esDecCampoNumCuenta;\n    if(tipoCampoNumCuenta == 'varchar') {\n    \tesStringCampoNumCuenta = true;\n    } else if(tipoCampoNumCuenta == 'int') {\n    \tesIntCampoNumCuenta = true;\n    } else if(tipoCampoNumCuenta == 'decimal') {\n    \tesDecCampoNumCuenta = true;\n    }\n    if(length == 0) {\n    \tif(arregloClientes.length > 0) {\n\t    \tif(arregloCreditos[0] == undefined)\n\t    \t\tarregloCreditos[0] = [];\n\t    \tif(arregloPagos[0] == undefined)\n\t    \t\tarregloPagos[0] = [];\n\t    \tif(arregloPagos[0][0] == undefined)\n\t    \t\tarregloPagos[0][0] = [];\n\t    \tvar newObject = {};\n\t        for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tvar newObjectCredito = {};\n\t        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tvar newObjectPago = {};\n\t        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tarregloClientes.push(newObject);\n\t        arregloCreditos[0].push(newObjectCredito);\n\t        arregloPagos[0][0].push(newObjectPago);\n\t    }\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] == arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) == 0) ) {\n    \tif(arregloCreditos[m] == undefined)\n    \t\tarregloCreditos[m] = [];\n    \tvar existeCredito = false;\n    \tfor (var i = 0; i < arregloCreditos[m].length; i++) {\n    \t\tif( ((esIntCampoNumCuenta || esDecCampoNumCuenta) && valor[campoNumCuenta] == arregloCreditos[m][i][campoNumCuenta]) || (esStringCampoNumCuenta && arregloCreditos[m][i][campoNumCuenta].localeCompare(valor[campoNumCuenta]) == 0) ) {\n    \t\t\texisteCredito = true;\n    \t\t\tvar newObjectPago = {};\n\t\t        for (var j = 0; j < camposAGuardarDePagosCreditosDeTablas.length; j++) {\n\t\t    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[j].nombre];\n\t\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[j].tipo);\n\t\t    \t\tvar validarVariable = true;\n\t\t    \t\tif( validarVariable ) {\n\t\t    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[j].nombre] = valorAInsertar;\n\t\t    \t\t} else {\n\t\t    \t\t\t//bitacora add error porque no inserto variable\n\t\t    \t\t}\n\t\t    \t};\n\t\t    \tif(arregloPagos[m] == undefined)\n\t\t    \t\tarregloPagos[m] = [];\n\t\t    \tif(arregloPagos[m][i] == undefined)\n\t\t    \t\tarregloPagos[m][i] = [];\n    \t\t\tarregloPagos[m][i].push(newObjectPago);\n    \t\t\tbreak;\n    \t\t}\n    \t};\n    \tif(!existeCredito) {\n    \t\tvar newObject = {};\n\t    \tfor (var i = 0; i < camposAGuardarCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObject[camposAGuardarCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tvar newObjectPago = {};\n\t        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tarregloCreditos[m].push(newObject);\n\t    \tif(arregloPagos[m][0] == undefined)\n\t    \t\tarregloPagos[m][0] = [];\n\t    \tarregloPagos[m][0].push(newObjectPago);\n    \t}\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] > arregloClientes[end][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[end][campoCliente]) > 0) ) {\n        /*var newObject = {};\n        for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newObjectCredito = {};\n        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArray = [newObjectCredito];*/\n    \tvar newObjectPago = {};\n        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArrayPagos = [[newObjectPago]];\n    \t/*arregloClientes.splice(end + 1, 0, newObject);\n    \tarregloCreditos.splice(end + 1, 0, newArray);*/\n    \tarregloPagos.splice(end + 1, 0, newArrayPagos);\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] < arregloClientes[start][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[start][campoCliente]) < 0) ) {//!!\n    \t/*var newObject = {};\n        for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newObjectCredito = {};\n        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArray = [newObjectCredito];*/\n    \tvar newObjectPago = {};\n        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArrayPagos = [[newObjectPago]];\n        /*arregloClientes.splice(start, 0, newObject);\n        arregloCreditos.splice(start, 0, newArray);*/\n        arregloPagos.splice(start, 0, newArrayPagos);\n        return;\n    }\n    if(start >= end){\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] < arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) < 0) ) {\n        insercionBinariaPagos(valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeClientesCreditosDeTablas, camposAGuardarDeCreditosCreditosDeTablas, camposAGuardarDePagosCreditosDeTablas, start, m - 1);\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] > arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) > 0) ) {\n        insercionBinariaPagos(valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeClientesCreditosDeTablas, camposAGuardarDeCreditosCreditosDeTablas, camposAGuardarDePagosCreditosDeTablas, m + 1, end);\n        return;\n    }\n}\n\nfunction insercionBinariaPlanPagos (valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeClientesCreditosDeTablas, camposAGuardarDeCreditosCreditosDeTablas, camposAGuardarDePagosCreditosDeTablas, startVal, endVal) {\n\tvar length = arregloClientes.length;\n    var start = typeof(startVal) != 'undefined' ? startVal : 0;\n    var end = typeof(endVal) != 'undefined' ? endVal : length - 1;//!! endVal could be 0 don't use || syntax\n    var m = start + Math.floor((end - start)/2);\n    var esStringCampoCliente, esIntCampoCliente, esDecCampoCliente;\n    if(tipoCampoCliente == 'varchar') {\n    \tesStringCampoCliente = true;\n    } else if(tipoCampoCliente == 'int') {\n    \tesIntCampoCliente = true;\n    } else if(tipoCampoCliente == 'decimal') {\n    \tesDecCampoCliente = true;\n    }\n    var esStringCampoNumCuenta, esIntCampoNumCuenta, esDecCampoNumCuenta;\n    if(tipoCampoNumCuenta == 'varchar') {\n    \tesStringCampoNumCuenta = true;\n    } else if(tipoCampoNumCuenta == 'int') {\n    \tesIntCampoNumCuenta = true;\n    } else if(tipoCampoNumCuenta == 'decimal') {\n    \tesDecCampoNumCuenta = true;\n    }\n    if(length == 0) {\n    \tif(arregloClientes.length > 0) {\n\t    \tif(arregloCreditos[0] == undefined)\n\t    \t\tarregloCreditos[0] = [];\n\t    \tif(arregloPlanPagos[0] == undefined)\n\t    \t\tarregloPlanPagos[0] = [];\n\t    \tif(arregloPlanPagos[0][0] == undefined)\n\t    \t\tarregloPlanPagos[0][0] = [];\n\t    \t/*var newObject = {};\n\t        for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tvar newObjectCredito = {};\n\t        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};*/\n\t    \tvar newObjectPago = {};\n\t        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \t/*arregloClientes.push(newObject);\n\t        arregloCreditos[0].push(newObjectCredito);*/\n\t        arregloPlanPagos[0][0].push(newObjectPago);\n\t    }\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] == arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) == 0) ) {\n    \tif(arregloCreditos[m] == undefined)\n    \t\tarregloCreditos[m] = [];\n    \tvar existeCredito = false;\n    \tfor (var i = 0; i < arregloCreditos[m].length; i++) {\n    \t\tif( ((esIntCampoNumCuenta || esDecCampoNumCuenta) && valor[campoNumCuenta] == arregloCreditos[m][i][campoNumCuenta]) || (esStringCampoNumCuenta && arregloCreditos[m][i][campoNumCuenta].localeCompare(valor[campoNumCuenta]) == 0) ) {\n    \t\t\texisteCredito = true;\n    \t\t\tvar newObjectPago = {};\n\t\t        for (var j = 0; j < camposAGuardarDePagosCreditosDeTablas.length; j++) {\n\t\t    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[j].nombre];\n\t\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[j].tipo);\n\t\t    \t\tvar validarVariable = true;\n\t\t    \t\tif( validarVariable ) {\n\t\t    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[j].nombre] = valorAInsertar;\n\t\t    \t\t} else {\n\t\t    \t\t\t//bitacora add error porque no inserto variable\n\t\t    \t\t}\n\t\t    \t};\n\t\t    \tif(arregloPlanPagos[m] == undefined)\n\t\t    \t\tarregloPlanPagos[m] = [];\n\t\t    \tif(arregloPlanPagos[m][i] == undefined)\n\t\t    \t\tarregloPlanPagos[m][i] = [];\n    \t\t\tarregloPlanPagos[m][i].push(newObjectPago);\n    \t\t\tbreak;\n    \t\t}\n    \t};\n    \tif(!existeCredito) {\n    \t\tvar newObject = {};\n\t    \tfor (var i = 0; i < camposAGuardarCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObject[camposAGuardarCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tvar newObjectPago = {};\n\t        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n\t    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n\t    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n\t    \t\tvar validarVariable = true;\n\t    \t\tif( validarVariable ) {\n\t    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n\t    \t\t} else {\n\t    \t\t\t//bitacora add error porque no inserto variable\n\t    \t\t}\n\t    \t};\n\t    \tarregloCreditos[m].push(newObject);\n\t    \tif(arregloPlanPagos[m][0] == undefined)\n\t    \t\tarregloPlanPagos[m][0] = [];\n\t    \tarregloPlanPagos[m][0].push(newObjectPago);\n    \t}\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] > arregloClientes[end][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[end][campoCliente]) > 0) ) {\n        /*var newObject = {};\n        for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newObjectCredito = {};\n        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArray = [newObjectCredito];*/\n    \tvar newObjectPago = {};\n        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArrayPagos = [[newObjectPago]];\n    \t/*arregloClientes.splice(end + 1, 0, newObject);\n    \tarregloCreditos.splice(end + 1, 0, newArray);*/\n    \tarregloPlanPagos.splice(end + 1, 0, newArrayPagos);\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] < arregloClientes[start][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[start][campoCliente]) < 0) ) {//!!\n    \t/*var newObject = {};\n        for (var i = 0; i < camposAGuardarDeClientesCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeClientesCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeClientesCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObject[camposAGuardarDeClientesCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newObjectCredito = {};\n        for (var i = 0; i < camposAGuardarDeCreditosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDeCreditosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDeCreditosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectCredito[camposAGuardarDeCreditosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArray = [newObjectCredito];*/\n    \tvar newObjectPago = {};\n        for (var i = 0; i < camposAGuardarDePagosCreditosDeTablas.length; i++) {\n    \t\tvar valorAInsertar = valor[camposAGuardarDePagosCreditosDeTablas[i].nombre];\n    \t\t//var validarVariable = checkVariable(valorAInsertar, camposAGuardarDePagosCreditosDeTablas[i].tipo);\n    \t\tvar validarVariable = true;\n    \t\tif( validarVariable ) {\n    \t\t\tnewObjectPago[camposAGuardarDePagosCreditosDeTablas[i].nombre] = valorAInsertar;\n    \t\t} else {\n    \t\t\t//bitacora add error porque no inserto variable\n    \t\t}\n    \t};\n    \tvar newArrayPagos = [[newObjectPago]];\n        /*arregloClientes.splice(start, 0, newObject);\n        arregloCreditos.splice(start, 0, newArray);*/\n        arregloPlanPagos.splice(start, 0, newArrayPagos);\n        return;\n    }\n    if(start >= end){\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] < arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) < 0) ) {\n        insercionBinariaPlanPagos(valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeClientesCreditosDeTablas, camposAGuardarDeCreditosCreditosDeTablas, camposAGuardarDePagosCreditosDeTablas, start, m - 1);\n        return;\n    }\n    if( ((esIntCampoCliente || esDecCampoCliente) && valor[campoCliente] > arregloClientes[m][campoCliente]) || (esStringCampoCliente && valor[campoCliente].localeCompare(arregloClientes[m][campoCliente]) > 0) ) {\n        insercionBinariaPlanPagos(valor, campoCliente, campoNumCuenta, tipoCampoCliente, tipoCampoNumCuenta, camposAGuardarDeClientesCreditosDeTablas, camposAGuardarDeCreditosCreditosDeTablas, camposAGuardarDePagosCreditosDeTablas, m + 1, end);\n        return;\n    }\n}\n\n\n/* ================================\t\tUTILS\t\t================================*/\n"],"file":"ClasificarCreditoD.js"}